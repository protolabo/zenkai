{"version":3,"file":"zenkai-ui.min.js","sources":["../src/std/std-parse.js","../src/std/std-object.js","../src/std/std-string.js","../src/dom/dom-parse.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/dom/dom-remove.js","../src/ui/form/floating-label.js","../src/ui/form/utils.js","../src/ui/form/selector/base-selector.js","../src/ui/form/selector/form-selector.js","../src/ui/form/selector/factory.js","../src/ui/form/switch/base-switch.js","../src/ui/form/switch/form-switch.js","../src/ui/form/switch/factory.js","../src/ui/utils.js","../src/ui/collapsible.js","../src/ui/form/input-counter.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable=false] indicates whether the value can be assigned the value *NULL*\r\n * @memberof STD\r\n */\r\nexport function valOrDefault(arg, value, isNullable = false) {\r\n    if (isNullable) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isEmpty(obj) {\r\n    return isIterable(obj) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is a non-string iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isCollection(obj) {\r\n    return isIterable(obj) && !isString(obj);\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} value string\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrWhitespace(value) {\r\n    return (!value || isString(value) && (value.length === 0 || /^\\s*$/.test(value)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { isObject, isNullOrUndefined } from \"./std-parse.js\";\r\n\r\n\r\n/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) {\r\n    return hasOwnProperty.call(obj, key);\r\n};\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * Creates a clone of an object\r\n * @param {*} obj Object\r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (isNullOrUndefined(obj) || !isObject(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace, isString } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Casing (camel, pascal, upper, lower)\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}\r\n\r\n/**\r\n * Verifies that a character is a vowel\r\n * @param {string} char String character\r\n */\r\nexport function isVowel(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    return \"aeiou\".includes(char.toLowerCase());\r\n}\r\n\r\n/**\r\n * Verifies that a character is a consonant\r\n * @param {string} char String character\r\n */\r\nexport function isConsonant(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    return \"bcdfghjklmnpqrstvwxyz\".includes(char.toLowerCase());\r\n}\r\n\r\n/**\r\n * Verifies that a character is uppercase\r\n * @param {string} char String character\r\n */\r\nexport function isUpperCase(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    let charCode = char.charCodeAt(0);\r\n\r\n    return charCode >= 65 && charCode <= 90;\r\n}\r\n\r\n/**\r\n * Verifies that a character is lowercase\r\n * @param {string} char String character\r\n */\r\nexport function isLowerCase(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    let charCode = char.charCodeAt(0);\r\n\r\n    return charCode >= 97 && charCode <= 122;\r\n}","import { isNullOrUndefined, isString, isIterable, hasOwn, pascalCase, isEmpty, all, some, isCollection } from '@std/index.js';\r\nimport { windowWidth, windowHeight } from './dom-stat.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTML Element*\r\n * @param {Element} obj \r\n * @param {string|string[]|string[][]} [kind] \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj, kind) => {\r\n    if (!(isElementNode(obj) && obj instanceof HTMLElement)) {\r\n        return false;\r\n    }\r\n\r\n    if (isIterable(kind)) {\r\n        return isHTMLElementKind(obj, Array.isArray(kind) ? kind : [kind]);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst TagNameMapping = {\r\n    'a': \"Anchor\",\r\n    'br': \"BR\",\r\n    'dl': \"DList\",\r\n    'datalist': \"DataList\",\r\n    'fieldset': \"FieldSet\",\r\n    'frameset': \"FrameSet\",\r\n    'hr': \"HR\",\r\n    'h1': \"Heading\",\r\n    'h2': \"Heading\",\r\n    'h3': \"Heading\",\r\n    'h4': \"Heading\",\r\n    'h5': \"Heading\",\r\n    'h6': \"Heading\",\r\n    'li': \"LI\",\r\n    'ol': \"OList\",\r\n    'optgroup': \"OptGroup\",\r\n    'p': \"Paragraph\",\r\n    'q': \"Quote\",\r\n    'blockquote': \"Quote\",\r\n    'caption': \"TableCaption\",\r\n    'td': \"TableCell\",\r\n    'th': \"TableCell\",\r\n    'col': \"TableCol\",\r\n    'tr': \"TableRow\",\r\n    'tbody': \"TableSection\",\r\n    'thead': \"TableSection\",\r\n    'tfoot': \"TableSection\",\r\n    'textarea': \"TextArea\",\r\n    'ul': \"UList\",\r\n};\r\n\r\n/**\r\n * Verifies the tag of an *HTML Element*\r\n * @param {HTMLElement} element \r\n * @param {string[]|string[][]} kinds\r\n * @returns {boolean}\r\n * @private\r\n */\r\nfunction isHTMLElementKind(element, kinds) {\r\n    const isInstanceOf = (obj) => element instanceof obj;\r\n    const hasTag = (tag) => element.tagName === tag.toUpperCase();\r\n    const isOfType = (type) => Array.isArray(type) ? type.includes(element.type) : element.type === type;\r\n    \r\n    return kinds.some((kind) => {\r\n        if (!isIterable(kind)) {\r\n            return false;\r\n        }\r\n\r\n        var name = kind;\r\n        var type = null;\r\n        \r\n        if (Array.isArray(kind)) {\r\n            [name, type] = kind;\r\n        }\r\n\r\n        name = name.toLowerCase();\r\n        var interfaceName = `HTML${hasOwn(TagNameMapping, name) ? TagNameMapping[name] : pascalCase(name)}Element`;\r\n\r\n        if (!(isInstanceOf(window[interfaceName]) || hasTag(name))) {\r\n            return false;\r\n        }\r\n\r\n        if (isCollection(type) && !isEmpty(type)) {\r\n            return isOfType(type);\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Converts an html string to an HTML Element or a list of HTML Elements\r\n * @param {!string} prop \r\n * @param {!string} html \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction _htmlToElement(prop, html) {\r\n    if (!isString(html)) {\r\n        return null;\r\n    }\r\n\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content[prop];\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElement = _htmlToElement.bind(null, 'firstChild');\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElements = _htmlToElement.bind(null, 'childNodes');\r\n\r\n/**\r\n * Verifies that an element is visible\r\n * @param {!HTMLElement} element \r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInViewport(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' is not a valid HTML Element\");\r\n    }\r\n\r\n    const { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return top >= 0 && left >= 0 && bottom <= windowHeight() && right <= windowWidth();\r\n}\r\n\r\n/**\r\n * Verifies that an element is displayed inside a target element\r\n * @param {!HTMLElement} element \r\n * @param {!HTMLElement} target\r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInElement(element, target) {\r\n    if (!all([element, target], isHTMLElement)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' is not a valid HTML Element\");\r\n    }\r\n\r\n    const { top: top1, right: right1, bottom: bottom1, left: left1 } = element.getBoundingClientRect();\r\n    const { top: top2, right: right2, bottom: bottom2, left: left2 } = target.getBoundingClientRect();\r\n\r\n    return all([[top2, top1], [left2, left1], [right1, right2], [bottom1, bottom2]], (inner, outer) => inner <= outer);\r\n}","import { isObject, isNullOrUndefined, isIterable, isNullOrWhitespace, isString } from '@std/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} val class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (val) => val.replace(/\\s+/g, ' ').trim();\r\n\r\n\r\n/**\r\n * Add classes to an element\r\n * @param {HTMLElement} element \r\n * @param {string|string[]} value \r\n * @private\r\n * @memberof DOM\r\n */\r\nfunction addClass(element, value) {\r\n    if (!isIterable(value)) {\r\n        throw new TypeError(\"Bad argument: The passed `value` argument is not a string or array\");\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n        element.classList.add(...value);\r\n    } else {\r\n        let formattedValue = formatClass(value);\r\n\r\n        if (isNullOrWhitespace(element.className)) {\r\n            element.className = formattedValue;\r\n        } else {\r\n            addClass(element, formattedValue.split(' '));\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {string} value \r\n * @private\r\n */\r\nfunction assign(element, key, value) {\r\n    element[key] = value;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignObject(element, key, value) {\r\n    Object.assign(element[key], value);\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignAttribute(element, key, value) {\r\n    element.setAttribute(key, value);\r\n}\r\n\r\nconst GLOBAL_ATTRIBUTES = \"accesskey,autocapitalize,class,dataset,editable,draggable,hidden,id,inputmode,lang,style,tabindex,title\";\r\n\r\nconst AttributeHandler = {\r\n    // Global attributes\r\n    accesskey: [assign, 'accessKey'],\r\n    autocapitalize: [assign, 'autocapitalize'],\r\n    class: [addClass],\r\n    dataset: [assignObject, 'dataset'],\r\n    draggable: [assign, 'draggable'],\r\n    editable: [assign, 'contentEditable'],\r\n    hidden: [assign, 'hidden'],\r\n    id: [assign, 'id'],\r\n    inputmode: [assign, 'inputMode'],\r\n    lang: [assign, 'lang'],\r\n    html: [assign, 'innerHTML'],\r\n    style: [assign, 'style'],\r\n    tabindex: [assign, 'tabIndex'],\r\n    text: [assign, 'textContent'],\r\n    title: [assign, 'title'],\r\n    // Anchor attributes\r\n    download: [assign, 'download'],\r\n    ping: [assign, 'ping'],\r\n    target: [assign, 'target'],\r\n    // Area attributes\r\n    coords: [assign, 'coords'],\r\n    shape: [assign, 'shape'],\r\n    // Audio/Video attributes\r\n    autoplay: [assign, 'autoplay'],\r\n    buffered: [assign, 'buffered'],\r\n    controls: [assign, 'controls'],\r\n    loop: [assign, 'loop'],\r\n    muted: [assign, 'muted'],\r\n    playsinline: [assignAttribute, 'playsinline'],\r\n    poster: [assign, 'poster'],\r\n    preload: [assign, 'preload'],\r\n    // Form attributes\r\n    accept: [assign, 'accept'],\r\n    \"accept-charset\": [assign, 'acceptCharset'],\r\n    action: [assign, 'action'],\r\n    autocomplete: [assign, 'autocomplete'],\r\n    autofocus: [assign, 'autofocus'],\r\n    capture: [assign, 'capture'],\r\n    checked: [assign, 'checked'],\r\n    cols: [assign, 'cols'],\r\n    disabled: [assign, 'disabled'],\r\n    dirname: [assign, 'dirName'],\r\n    enctype: [assign, 'enctype'],\r\n    for: [assign, 'htmlFor'],\r\n    form: [assign, 'form'],\r\n    formaction: [assign, 'formAction'],\r\n    formenctype: [assign, 'formEnctype'],\r\n    formmethod: [assign, 'formMethod'],\r\n    formnovalidate: [assign, 'formNoValidate'],\r\n    formtarget: [assign, 'formTarget'],\r\n    high: [assign, 'high'],\r\n    label: [assign, 'label'],\r\n    list: [assign, 'list'],\r\n    low: [assign, 'low'],\r\n    max: [assign, 'max'],\r\n    maxlength: [assign, 'maxLength'],\r\n    method: [assign, 'method'],\r\n    min: [assign, 'min'],\r\n    minlength: [assign, 'minLength'],\r\n    multiple: [assign, 'multiple'],\r\n    novalidate: [assign, 'noValidate'],\r\n    optimum: [assign, 'optimum'],\r\n    pattern: [assign, 'pattern'],\r\n    placeholder: [assign, 'placeholder'],\r\n    readonly: [assign, 'readOnly'],\r\n    required: [assign, 'required'],\r\n    rows: [assign, 'rows'],\r\n    selected: [assign, 'selected'],\r\n    size: [assign, 'size'],\r\n    spellcheck: [assignAttribute, 'spellcheck'],\r\n    step: [assign, 'step'],\r\n    wrap: [assign, 'wrap'],\r\n    // Image attributes\r\n    crossorigin: [assign, 'crossOrigin'],\r\n    decoding: [assign, 'decoding'],\r\n    height: [assign, 'height'],\r\n    ismap: [assign, 'isMap'],\r\n    loading: [assign, 'loading'],\r\n    srcset: [assign, 'srcset'],\r\n    width: [assign, 'width'],\r\n    // Link attributes\r\n    alt: [assign, 'alt'],\r\n    as: [assign, 'as'],\r\n    media: [assign, 'media'],\r\n    rel: [assign, 'rel'],\r\n    src: [assign, 'src'],\r\n    sizes: [assign, 'sizes'],\r\n    // List attributes\r\n    reversed: [assign, 'reversed'],\r\n    start: [assign, 'start'],\r\n    // Meta attributes\r\n    charset: [assignAttribute, 'charset'],\r\n    content: [assign, 'content'],\r\n    \"http-equiv\": [assign, 'httpEquiv'],\r\n    // Object attributes\r\n    data: [assign, 'data'],\r\n    // Quote attributes\r\n    cite: [assign, 'cite'],\r\n    // Table attributes\r\n    abbr: [assign, 'abbr'],\r\n    colspan: [assign, 'colSpan'],\r\n    span: [assign, 'span'],\r\n    rowspan: [assign, 'rowSpan'],\r\n    scope: [assign, 'scope'],\r\n    // Track attributes\r\n    default: [assign, 'default'],\r\n    kind: [assign, 'kind'],\r\n    srclang: [assign, 'srclang'],\r\n    // Mix attributes\r\n    href: [assign, 'href'],\r\n    hreflang: [assign, 'hreflang'],\r\n    datetime: [assign, 'dateTime'],\r\n    name: [assign, 'name'],\r\n    type: [assign, 'type'],\r\n    value: [assign, 'value'],\r\n    usemap: [assign, 'useMap'],\r\n};\r\n\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute, validAttributes) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' argument is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isObject(attribute)) {\r\n        return element;\r\n    }\r\n\r\n    const isValid = (key) => GLOBAL_ATTRIBUTES.includes(key) || isNullOrUndefined(validAttributes) || validAttributes.includes(key);\r\n\r\n    for (const key of Object.keys(attribute)) {\r\n        if (isValid(key)) {\r\n            let value = attribute[key];\r\n            let args = AttributeHandler[key].slice(0);\r\n            let fn = args.shift();\r\n\r\n            if (!isNullOrUndefined(value)) {\r\n                fn(element, ...args, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {!string} optValue option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectedValue(select, optValue) {\r\n    if (!isHTMLElement(select, \"select\")) {\r\n        throw new TypeError(\"Bad argument: The given 'select' argument is not a valid HTML Select element\");\r\n    }\r\n\r\n    if (!(isString(optValue) || isObject(optValue))) {\r\n        throw new TypeError(\"Bad argument: The given 'optValue' argument is a null or undefined\");\r\n    }\r\n\r\n    /**\r\n     * Object equality\r\n     * @param {HTMLOptionElement} option \r\n     * @param {*} obj \r\n     */\r\n    const objectEq = (option, obj) => option.value === obj.value || option.text === obj.text;\r\n\r\n    /**\r\n     * String equality\r\n     * @param {HTMLOptionElement} option \r\n     * @param {string} obj \r\n     */\r\n    const stringEq = (option, value) => option.value === value;\r\n\r\n    const eqHandler = isString(optValue) ? stringEq : objectEq;\r\n\r\n    const { options, multiple } = select;\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n        let option = options[i];\r\n\r\n        if (eqHandler(option, optValue)) {\r\n            if (!multiple) {\r\n                Array.from(select.selectedOptions).forEach(opt => opt.selected = false);\r\n            }\r\n            option.selected = true;\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { isNullOrUndefined, isObject, valOrDefault, isIterable, isString } from \"@std/index.js\";\r\nimport { isHTMLElement, isNode } from \"./dom-parse.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n\r\n/**\r\n * Creates an empty element with attributes\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {object} [_attributes] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createEmptyElement(tagName, _validAttributes, _attributes) {\r\n    const element = document.createElement(tagName);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (isObject(_attributes)) {\r\n        addAttributes(element, _attributes, valOrDefault(_validAttributes, \"\"));\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates an element with attributes and content\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {Function} [contentResolver] \r\n * @param {object} [_attributes] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_content] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createElement(tagName, _validAttributes, _attributes, _content) {\r\n    const element = createEmptyElement(tagName, _validAttributes, _attributes);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isNullOrUndefined(_content)) {\r\n        addContent(element, _content);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n\r\n// TODO: createScript\r\n\r\n// TODO: createStyle\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment(_children) {\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(fragment, _children);\r\n    }\r\n\r\n    return fragment;\r\n}\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n\r\n/******************************************************************************\r\n * Metadata Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates an `<base>` element with some attributes\r\n * @function createBase\r\n * @param {object} _attribute \r\n * @returns {HTMLBaseElement}\r\n * @memberof DOM\r\n */\r\nexport const createBase = createEmptyElement.bind(null, \"base\", \"href,target\");\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport const createLink = createEmptyElement.bind(null, \"link\", \"as,crossorigin,disabled,href,hreflang,media,rel,sizes,type\");\r\n\r\n/**\r\n * Creates a `<meta>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLMetaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeta = createEmptyElement.bind(null, \"meta\", \"charset,content,http-equiv,name\");\r\n\r\n/**\r\n * Creates a `<title>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTitleElement}\r\n * @memberof DOM\r\n */\r\nexport const createTitle = createElement.bind(null, \"title\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = createElement.bind(null, \"template\", \"html,text\");\r\n\r\n\r\n/******************************************************************************\r\n * Sectionning Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = createElement.bind(null, \"header\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = createElement.bind(null, \"footer\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = createElement.bind(null, \"main\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = createElement.bind(null, \"article\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = createElement.bind(null, \"section\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = createElement.bind(null, \"nav\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = createElement.bind(null, \"aside\", \"html,text\");\r\n\r\n\r\n/******************************************************************************\r\n * Heading Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = createElement.bind(null, \"h1\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = createElement.bind(null, \"h2\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = createElement.bind(null, \"h3\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = createElement.bind(null, \"h4\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = createElement.bind(null, \"h5\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = createElement.bind(null, \"h6\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = createElement.bind(null, \"div\", \"html,text\");\r\n\r\n\r\n\r\n/**\r\n * Creates a `<br>` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @returns {HTMLBRElement}\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = createEmptyElement.bind(null, \"br\", \"\");\r\n\r\n/**\r\n * Creates a `<hr>` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @returns {HTMLHRElement}\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = createEmptyElement.bind(null, \"hr\", \"\");\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = createElement.bind(null, \"p\", \"html,text\");\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function createBlockQuotation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createBlockQuotation = createElement.bind(null, \"blockquote\", \"cite,html,text\");\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = createElement.bind(null, \"ul\", \"html\");\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = createElement.bind(null, \"ol\", \"html,reversed,start,type\");\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = createElement.bind(null, \"li\", \"html,text,value\");\r\n\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = createElement.bind(null, \"dl\", \"html\");\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = createElement.bind(null, \"dt\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = createElement.bind(null, \"dd\", \"html,text\");\r\n\r\n/******************************************************************************\r\n * Inline Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @function createAnchor\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport const createAnchor = createElement.bind(null, \"a\", \"download,href,hreflang,html,ping,rel,target,text,type\");\r\n\r\n/**\r\n * Creates an `<area>` element with some attributes\r\n * @function createArea\r\n * @param {object} _attribute \r\n * @returns {HTMLAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createArea = createEmptyElement.bind(null, \"area\", \"alt,coords,download,href,hreflang,media,ping,rel,shape,target\");\r\n\r\n\r\n/******************************************************************************\r\n * Embedded Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<audio>` element with some attributes\r\n * @function createAudio\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children\r\n * @returns {HTMLAudioElement}\r\n * @memberof DOM\r\n */\r\nexport const createAudio = createElement.bind(null, \"audio\", \"autoplay,controls,crossorigin,html,loop,muted,preload,src,text\");\r\n\r\n/**\r\n * Creates a `<img>` element with some attributes\r\n * @function createImage\r\n * @param {object} _attribute \r\n * @returns {HTMLImageElement}\r\n * @memberof DOM\r\n */\r\nexport const createImage = createEmptyElement.bind(null, \"img\", \"alt,crossorigin,decoding,height,ismap,loading,sizes,src,srcset,usemap,width\");\r\n\r\n/**\r\n * Creates a `<embed>` element with some attributes\r\n * @function createEmbed\r\n * @param {object} _attribute \r\n * @returns {HTMLEmbedElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmbed = createEmptyElement.bind(null, \"embed\", \"height,src,type,width\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = createElement.bind(null, \"figure\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = createElement.bind(null, \"figcaption\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<object>` element with some attributes\r\n * @function createObject\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLObjectElement}\r\n * @memberof DOM\r\n */\r\nexport const createObject = createElement.bind(null, \"object\", \"data,height,html,name,text,type,usemap,width\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = createElement.bind(null, \"picture\", \"html\");\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = createEmptyElement.bind(null, \"source\", \"media,sizes,src,srcset,type\");\r\n\r\n/**\r\n * Creates a `<track>` element with some attributes\r\n * @function createTrack\r\n * @param {object} _attribute \r\n * @returns {HTMLTrackElement}\r\n * @memberof DOM\r\n */\r\nexport const createTrack = createEmptyElement.bind(null, \"track\", \"default,kind,label,src,srclang\");\r\n\r\n/**\r\n * Creates a `<video>` element with some attributes\r\n * @function createVideo\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLVideoElement}\r\n * @memberof DOM\r\n */\r\nexport const createVideo = createElement.bind(null, \"video\", \"autoplay,controls,crossorigin,height,html,loop,muted,playsinline,poster,preload,src,text,width\");\r\n\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = createElement.bind(null, \"span\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = createElement.bind(null, \"strong\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = createElement.bind(null, \"em\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = createElement.bind(null, \"mark\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = createElement.bind(null, \"samp\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = createElement.bind(null, \"sub\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = createElement.bind(null, \"sup\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<del>` element with some attributes\r\n * @function createDeletedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createDeletedPart = createElement.bind(null, \"del\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<ins>` element with some attributes\r\n * @function createInsertedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createInsertedPart = createElement.bind(null, \"ins\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createQuote = createElement.bind(null, \"q\", \"cite,html,text\");\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = createElement.bind(null, \"abbr\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = createElement.bind(null, \"b\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = createElement.bind(null, \"i\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = createElement.bind(null, \"s\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = createElement.bind(null, \"u\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = createElement.bind(null, \"cite\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @function createTime\r\n * @param {object} _attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport const createTime = createElement.bind(null, \"time\", \"datetime,html,text\");\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = createElement.bind(null, \"code\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFormElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = createElement.bind(null, \"form\", \"accept-charset,action,autocomplete,enctype,html,method,name,novalidate,rel,target,text\");\r\n\r\nconst inputTypes = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createEmptyElement.bind(null, \"input\", \"accept,alt,autocomplete,autofocus,capture,checked,dirname,disabled,height,max,maxlength,minlength,min,multiple,name,pattern,placeholder,readonly,required,size,src,step,type,value,width\");\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = createElement.bind(null, \"textarea\", \"autocomplete,autofocus,cols,disabled,html,maxlength,minlength,name,placeholder,readonly,required,rows,spellcheck,text,value,wrap\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = createElement.bind(null, \"label\", \"for,html,text\");\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSelectElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = createElement.bind(null, 'select', \"autocomplete,autofocus,disabled,html,multiple,name,required,size\");\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = createElement.bind(null, \"option\", \"disabled,html,label,selected,text,value\");\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptGroupElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = createElement.bind(null, \"optgroup\", \"disabled,html,label\");\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFieldSetElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = createElement.bind(null, \"fieldset\", \"disabled,html,name,text\");\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = createElement.bind(null, \"legend\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = createElement.bind(null, \"datalist\", \"html\");\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = createElement.bind(null, \"meter\", \"high,html,low,max,min,optimum,text,value\");\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = createElement.bind(null, \"progress\", \"html,max,text,value\");\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = createElement.bind(null, \"output\", \"html,name,text,value\");\r\n\r\nconst buttonTypes = [\"button\", \"submit\", \"reset\"];\r\n\r\n/**\r\n * Creates a `<button>` element with optionally some attributes and children elements\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLButtonElement}\r\n * @memberof DOM\r\n */\r\nexport const createButton = createElement.bind(null, \"button\", \"autofocus,disabled,formaction,formenctype,formmethod,formnovalidate,formtarget,html,name,text,type,value\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = createElement.bind(null, \"table\", \"html\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = createElement.bind(null, \"caption\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = createElement.bind(null, \"thead\", \"html\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = createElement.bind(null, \"tbody\", \"html\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = createElement.bind(null, \"tfoot\", \"html\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = createEmptyElement.bind(null, \"col\", \"span\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = createElement.bind(null, \"colgroup\", \"html,span\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = createElement.bind(null, \"tr\", \"html\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = createElement.bind(null, \"th\", \"abbr,colspan,html,rowspan,scope,text\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children\r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = createElement.bind(null, \"td\", \"colspan,html,rowspan,text\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {Node} element element\r\n * @param {HTMLCollection} content children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, content) {\r\n    if (!(isNode(content) || isIterable(content))) {\r\n        return element;\r\n    }\r\n\r\n    if (isNode(content) || isString(content)) {\r\n        element.append(content);\r\n    } else {\r\n        element.append(...content);\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@std/index.js';\r\nimport { isElement, isHTMLElement, isDocumentFragment, isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    const container = isNode(_container) ? _container : document;\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    const container = isNode(_container) ? _container : document;\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {string} dir sibling direction\r\n * @param {HTMLElement} element element\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(dir, element, pred) {\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    var sibling = element[dir];\r\n\r\n    if (isFunction(pred)) {\r\n        while (isElement(sibling) && !pred(sibling)) {\r\n            sibling = sibling[dir];\r\n        }\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @function getPreviousElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport const getPreviousElementSibling = getElementSibling.bind(null, \"previousElementSibling\");\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @function getNextElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport const getNextElementSibling = getElementSibling.bind(null, \"nextElementSibling\");\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {!Element} target \r\n * @param {!Function} pred Decides whether the target is found\r\n * @param {number} [_max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, pred, _max) {\r\n    if (!isElement(target)) {\r\n        throw new TypeError(\"Bad argument: The given target parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isFunction(pred)) {\r\n        throw new TypeError(\"Bad argument: The given pred parameter is not a valid Function\");\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n\r\n    if (_max > 0) {\r\n        return findAncestorIter(parent, pred, _max - 1);\r\n    }\r\n\r\n    return findAncestorInf(parent, pred);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, pred) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, pred);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} max Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, pred, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, pred, max - 1);\r\n}","import { isFunction } from '@std/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfy the predicate function if given\r\n * @param {!Node} node \r\n * @param {Function} [_callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, _callback) {\r\n    if (!isNode(node)) {\r\n        throw new TypeError(\"Bad argument: The given `node` is not a valid Node\");\r\n    }\r\n\r\n    if (isFunction(_callback)) {\r\n        Array.from(node.childNodes).forEach(n => {\r\n            if (_callback(n)) {\r\n                node.removeChild(n);\r\n            }\r\n        });\r\n\r\n        return node;\r\n    }\r\n\r\n    return removeAllChildren(node);\r\n\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isEmpty } from '@std/index.js';\r\n\r\n\r\n/**\r\n * Update class related to the action *move label down*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveDown = (label) => label.classList.add('down');\r\n\r\n/**\r\n * Update class related to the action *move label up*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveUp = (label) => label.classList.remove('down');\r\n\r\n/**\r\n * Update class related to the action *add focus to element*\r\n * @param {HTMLElement} element \r\n */\r\nconst addFocus = (element) => element.classList.add('focused');\r\n\r\n/**\r\n * Update class related to the action *remove focus from element*\r\n * @param {HTMLElement} element \r\n */\r\nconst removeFocus = (element) => element.classList.remove('focused');\r\n\r\n/**\r\n * Activate floating label in given scope\r\n * @param {HTMLElement} form \r\n */\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isHTMLElement(input)) {\r\n                if (isNullOrWhitespace(input.placeholder)) {\r\n                    bindEvents(input, label);\r\n                    if (isEmpty(input.value)) {\r\n                        moveDown(label);\r\n                    }\r\n                } else {\r\n                    console.warn(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Input \"${label.htmlFor}\" contains a placeholder`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n                }\r\n            } else {\r\n                console.error(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Missing input for label \"${label.htmlFor}\"`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                moveUp(label);\r\n                addFocus(label.parentElement);\r\n            });\r\n\r\n            input.addEventListener('blur', function (e) {\r\n                if (isEmpty(this.value)) {\r\n                    moveDown(label);\r\n                }\r\n                removeFocus(label.parentElement);\r\n            });\r\n            \r\n            input.addEventListener('input', function (e) {\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        moveDown(label);\r\n                    } else {\r\n                        moveUp(label);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { valOrDefault, isString, isNullOrUndefined, isNullOrWhitespace } from \"@std/index.js\";\r\nimport { isHTMLElement, getElements, getElement } from \"@dom/index.js\";\r\n\r\n\r\nconst TYPE = 'type';\r\nconst VALUE = 'value';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\n/**\r\n * Gets type attribute\r\n * @param {HTMLElement} element \r\n * @returns {string}\r\n */\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\n/**\r\n * Sets type attribute\r\n * @param {HTMLElement} element \r\n * @param {string} value \r\n * @returns {string}\r\n */\r\nexport const setType = (element, value) => element.dataset[TYPE] = value;\r\n\r\n/**\r\n * Gets value attribute\r\n * @param {HTMLElement} element \r\n * @returns {string}\r\n */\r\nexport const getValue = (element) => element.dataset[VALUE];\r\n\r\n/**\r\n * Sets value attribute\r\n * @param {HTMLElement} element \r\n * @param {string} value \r\n * @returns {string}\r\n */\r\nexport const setValue = (element, value) => element.dataset[VALUE] = value;\r\n\r\n/**\r\n * Gets state attribute\r\n * @param {HTMLElement} element \r\n * @returns {string}\r\n */\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\n/**\r\n * Sets state attribute\r\n * @param {HTMLElement} element \r\n * @param {string} value \r\n * @returns {string}\r\n */\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));\r\n\r\n/**\r\n * Resolves the container\r\n * @param {HTMLElement|string} container \r\n * @returns {HTMLElement}\r\n */\r\nexport function resolveContainer(container) {\r\n    if (isHTMLElement(container)) {\r\n        return container;\r\n    } else if (isString(container) && !isNullOrWhitespace(container)) {\r\n        return getElement(container);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} selector \r\n * @param {HTMLElement|string} [_container] \r\n * @returns {HTMLElement[]}\r\n */\r\nexport function getComponents(selector, _container) {\r\n    if (isNullOrUndefined(selector)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    const container = resolveContainer(_container);\r\n\r\n    if (!isHTMLElement(container)) {\r\n        return null;\r\n    }\r\n\r\n    return getElements(selector, container);\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} type \r\n * @param {HTMLElement} container \r\n * @returns {HTMLInputElement}\r\n */\r\nexport function getInput(type, container) {\r\n    if (isHTMLElement(container, 'label') && !isNullOrWhitespace(container.htmlFor)) {\r\n        return getElement(`#${container.htmlFor}`);\r\n    }\r\n\r\n    return getElement(`input[type='${valOrDefault(type, 'text')}']`, container);\r\n}","import { hasOwn, isFunction, isNullOrUndefined, isNull, valOrDefault } from '@std/index.js';\r\nimport { findAncestor, getElements, isHTMLElement, removeChildren } from '@dom/index.js';\r\nimport { check, uncheck, getState, getValue } from '../utils.js';\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n/**\r\n * Gets the item element\r\n * @param {HTMLElement} element \r\n * @this {HTMLElement}\r\n */\r\nfunction getItem(element) {\r\n    const isValid = (el) => hasOwn(el.dataset, 'selector');\r\n\r\n    if (isValid(element)) {\r\n        return element;\r\n    }\r\n\r\n    return findAncestor(element, isValid, 5);\r\n}\r\n\r\nconst BaseSelectorItem = {\r\n    /** @type {number} */\r\n    index: null,\r\n\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        this.setChecked(this.isChecked());\r\n\r\n        return this;\r\n    },\r\n\r\n    /** @returns {string} */\r\n    get value() { return getValue(this.container); },\r\n    /** @returns {boolean} */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /** @returns {boolean} */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n            this.container.classList.add(\"selector-item--selected\");\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n            this.container.classList.remove(\"selector-item--selected\");\r\n        }\r\n\r\n        return true;\r\n    },\r\n    setIndex(index) {\r\n        this.index = index;\r\n        this.container.dataset.selectorIndex = index;\r\n    },\r\n    destroy() {\r\n        removeChildren(this.container);\r\n        this.container.remove();\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const BaseSelector = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {BaseSelectorItem[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {BaseSelectorItem} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.selectedItem.value; },\r\n\r\n    init() {\r\n        const itemContainers = getElements('[data-selector]', this.container);\r\n\r\n        if (isNullOrUndefined(itemContainers)) {\r\n            return;\r\n        }\r\n\r\n        this.items = [];\r\n        this.defaultValue = getValue(this.container);\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < itemContainers.length; i++) {\r\n            const item = this.createItem(itemContainers[i]);\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n\r\n            if (item.value === this.defaultValue) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Creates a selector item\r\n     * @param {HTMLElement} container \r\n     */\r\n    createItem(container) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A selector requires a container\");\r\n        }\r\n\r\n        container.classList.add(\"selector-item\");\r\n\r\n        const item = Object.create(BaseSelectorItem, {\r\n            container: { value: container },\r\n            selector: { value: this },\r\n        }).init();\r\n\r\n        this.addItem(item);\r\n\r\n        return item;\r\n    },\r\n    /**\r\n     * Adds a selector item\r\n     * @param {BaseSelectorItem} item \r\n     * @param {*} _index \r\n     */\r\n    addItem(item, _index) {\r\n        this.items.push(item);\r\n\r\n        this.refresh();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * Gets a selector item\r\n     * @param {number} index \r\n     * @returns {BaseSelectorItem}\r\n     */\r\n    getItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return null;\r\n        }\r\n\r\n        return this.items.find((item) => item.index === index);\r\n    },\r\n    /**\r\n     * Removes a selector item\r\n     * @param {number} index \r\n     */\r\n    removeItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return false;\r\n        }\r\n\r\n        const item = this.getItem(index);\r\n\r\n        if (isNullOrUndefined(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.destroy()) {\r\n            return false;\r\n        }\r\n\r\n        this.items.splice(item.index, 1);\r\n\r\n        this.refresh();\r\n\r\n        return true;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n\r\n    refresh() {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            const item = this.items[i];\r\n            item.setIndex(i);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            const target = getItem(event.target);\r\n\r\n            if (!hasOwn(target.dataset, 'selector')) {\r\n                return;\r\n            }\r\n\r\n            const { selectorIndex } = target.dataset;\r\n\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            const item = this.getItem(+selectorIndex);\r\n\r\n            if (isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, isNull, hasOwn } from '@std/index.js';\r\nimport { findAncestor, getElements, isHTMLElement, removeChildren } from '@dom/index.js';\r\nimport { check, uncheck, getValue, getInput } from '../utils.js';\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n/**\r\n * Gets the item element\r\n * @param {HTMLElement} element \r\n * @this {HTMLElement}\r\n */\r\nfunction getItem(element) {\r\n    const isValid = (el) => hasOwn(el.dataset, 'selector');\r\n\r\n    if (isValid(element)) {\r\n        return element;\r\n    }\r\n\r\n    return findAncestor(element, isValid, 5);\r\n}\r\n\r\nconst FormSelectorItem = {\r\n    /** @type {number} */\r\n    index: null,\r\n\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.input['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return this.input.checked; },\r\n    /**\r\n     * Set the state of the item\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} Value indicating the success of the operation\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        this.input.checked = isChecked;\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n            this.container.classList.add(\"selector-item--selected\");\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n            this.container.classList.remove(\"selector-item--selected\");\r\n        }\r\n\r\n        return true;\r\n    },\r\n    setIndex(index) {\r\n        this.index = index;\r\n        this.container.dataset.selectorIndex = index;\r\n    },\r\n    destroy() {\r\n        removeChildren(this.container);\r\n        this.container.remove();\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const FormSelector = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {FormSelectorItem[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.selectedItem.value; },\r\n\r\n    init() {\r\n        const itemContainers = getElements('[data-selector]', this.container);\r\n\r\n        if (isNullOrUndefined(itemContainers)) {\r\n            return;\r\n        }\r\n\r\n        this.items = [];\r\n        this.defaultValue = getValue(this.container);\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < itemContainers.length; i++) {\r\n            const item = this.createItem(itemContainers[i]);\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n\r\n            if (item.value === this.defaultValue) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    createItem(container) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A selector requires a container\");\r\n        }\r\n\r\n        container.classList.add(\"selector-item\");\r\n\r\n        var input = getInput('radio', container);\r\n        if (!isHTMLElement(input)) {\r\n            throw new Error(\"Missing input: FormSelector requires an input in the container\");\r\n        }\r\n\r\n        const item = Object.create(FormSelectorItem, {\r\n            container: { value: container },\r\n            input: { value: input },\r\n            selector: { value: this },\r\n        }).init();\r\n\r\n        this.addItem(item);\r\n\r\n        return item;\r\n    },\r\n    /**\r\n     * Adds a selector item\r\n     * @param {BaseSelectorItem} item \r\n     * @param {*} _index \r\n     */\r\n    addItem(item, _index) {\r\n        this.items.push(item);\r\n\r\n        this.refresh();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * Gets a selector item\r\n     * @param {number} index \r\n     * @returns {FormSelectorItem}\r\n     */\r\n    getItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return null;\r\n        }\r\n\r\n        return this.items.find((item) => item.index === index);\r\n    },\r\n    /**\r\n     * Removes a selector item\r\n     * @param {number} index \r\n     */\r\n    removeItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return false;\r\n        }\r\n\r\n        const item = this.getItem(index);\r\n\r\n        if (isNullOrUndefined(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.destroy()) {\r\n            return false;\r\n        }\r\n\r\n        this.items.splice(item.index, 1);\r\n\r\n        this.refresh();\r\n\r\n        return true;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n\r\n    refresh() {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            const item = this.items[i];\r\n            item.setIndex(i);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.container.addEventListener('change', (event) => {\r\n            const target = getItem(event.target);\r\n\r\n            const { selectorIndex } = target.dataset;\r\n\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                target.checked = false;\r\n                this.items[this.selectedIndex].setChecked(true);\r\n                return;\r\n            }\r\n\r\n            const item = this.getItem(+selectorIndex);\r\n\r\n            if (isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, valOrDefault } from '@std/index.js';\r\nimport { isHTMLElement } from '@dom/index.js';\r\nimport { getType, getComponents } from \"../utils.js\";\r\nimport { BaseSelector } from './base-selector.js';\r\nimport { FormSelector } from './form-selector.js';\r\n\r\n\r\nconst Name = {\r\n    BaseSelector: 'selector',\r\n    FormSelector: 'form-selector',\r\n};\r\n\r\nconst toSelector = (name) => `[data-type=\"${name}\"]`;\r\n\r\nconst Selector = {\r\n    BaseSelector: toSelector(Name.BaseSelector),\r\n    FormSelector: toSelector(Name.FormSelector),\r\n};\r\n\r\nconst Selectors = [Selector.BaseSelector, Selector.FormSelector].join(',');\r\n\r\nconst isValid = (element) => RegExp('selector|form-selector').test(getType(element));\r\n\r\nconst isSelector = (element) => isHTMLElement(element) && isValid(element);\r\n\r\nconst TypeHandler = {\r\n    'selector': (container) => Object.create(BaseSelector, {\r\n        name: { value: Name.BaseSelector },\r\n        container: { value: container },\r\n        querySelector: { value: Selector.BaseSelector },\r\n    }),\r\n    'form-selector': (container) => Object.create(FormSelector, {\r\n        name: { value: Name.FormSelector },\r\n        container: { value: container },\r\n        querySelector: { value: Selector.FormSelector },\r\n    }),\r\n};\r\n\r\nexport const SelectorManager = {\r\n    /**\r\n     * Creates a `selector`\r\n     * @param {HTMLElement} container \r\n     * @param {string} [_type] \r\n     * @returns {BaseSelector|FormSelector}\r\n     */\r\n    create(container, _type) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A selector requires a container\");\r\n        }\r\n\r\n        const type = valOrDefault(_type, getType(container));\r\n        const handler = TypeHandler[type];\r\n\r\n        if (!isFunction(handler)) {\r\n            throw new Error(`Missing handler: The '${type}' field could not be handled`);\r\n        }\r\n\r\n        const widget = handler(container);\r\n\r\n        return widget;\r\n    },\r\n    /**\r\n     * Activates the `selector` found in the container\r\n     * @param {HTMLElement} container \r\n     * @param {*} [_options] \r\n     * @returns {BaseSelector[]|FormSelector[]}\r\n     */\r\n    activate(container, _options) {\r\n        const components = isSelector(container) ? [container] : getComponents(Selectors, container);\r\n        const options = valOrDefault(_options, {});\r\n\r\n        if (isNullOrUndefined(components)) {\r\n            return null;\r\n        }\r\n\r\n        const selectors = [];\r\n\r\n        for (let i = 0; i < components.length; i++) {\r\n            let selector = this.create(components[i]);\r\n\r\n            selector.init(options);\r\n\r\n            selectors.push(selector);\r\n        }\r\n\r\n        return selectors;\r\n    }\r\n};","import { isFunction, isNullOrUndefined } from '@std/index.js';\r\nimport { check, uncheck, getState, getValue } from \"../utils.js\";\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n\r\n/**\r\n * Changes the state of the switch\r\n * @param {boolean} isChecked \r\n * @returns {boolean} A value indicating whether the operation was a success\r\n */\r\nfunction setChecked(isChecked) {\r\n    if (isNullOrUndefined(isChecked)) {\r\n        return false;\r\n    }\r\n\r\n    if (isChecked) {\r\n        check(this.container, Status.ON);\r\n    } else {\r\n        uncheck(this.container, Status.OFF);\r\n    }\r\n\r\n    if (isFunction(this.afterChange)) {\r\n        this.afterChange(this);\r\n    }\r\n\r\n    this.refresh();\r\n\r\n    return true;\r\n}\r\n\r\nexport const BaseSwitch = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return getValue(this.container); },\r\n\r\n    init(args = {}) {\r\n        Object.assign(this, args);\r\n\r\n        this.container.classList.add(\"zenui-switch\");\r\n\r\n        this.defaultValue = this.isChecked();\r\n\r\n        setChecked.call(this, this.isChecked());\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n\r\n    check() {\r\n        setChecked.call(this, true);\r\n\r\n        return this;\r\n    },\r\n    uncheck() {\r\n        setChecked.call(this, false);\r\n\r\n        return this;\r\n    },\r\n    toggle() {\r\n        setChecked.call(this, !this.isChecked());\r\n\r\n        return this;\r\n    },\r\n\r\n    reset() {\r\n        setChecked.call(this, this.defaultValue);\r\n\r\n        return this;\r\n    },\r\n    refresh() {\r\n        if (this.isChecked()) {\r\n            this.container.classList.add(\"zenui-switch--checked\");\r\n        } else {\r\n            this.container.classList.remove(\"zenui-switch--checked\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * @returns {HTMLElement}\r\n     */\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n        });\r\n    }\r\n};","import { isFunction, isNullOrUndefined, valOrDefault } from '@std/index.js';\r\nimport { check, uncheck, getState } from \"../utils.js\";\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n\r\n/**\r\n * Changes the state of the switch\r\n * @param {boolean} isChecked \r\n * @returns {boolean} A value indicating whether the operation was a success\r\n */\r\nfunction setChecked(isChecked) {\r\n    if (isNullOrUndefined(isChecked)) {\r\n        return false;\r\n    }\r\n\r\n    this.input.checked = isChecked;\r\n\r\n    if (isChecked) {\r\n        check(this.container, Status.ON);\r\n    } else {\r\n        uncheck(this.container, Status.OFF);\r\n    }\r\n\r\n    if (isFunction(this.afterChange)) {\r\n        this.afterChange(this);\r\n    }\r\n\r\n    this.refresh();\r\n\r\n    return true;\r\n}\r\n\r\n\r\nexport const FormSwitch = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.input.value; },\r\n\r\n    init(args = {}) {\r\n        Object.assign(this, args);\r\n\r\n        this.container.classList.add(\"zenui-switch\");\r\n        this.input.classList.add(\"zenui-switch-input\");\r\n\r\n        this.defaultValue = this.isChecked();\r\n\r\n        setChecked.call(this, this.isChecked());\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return this.input.checked;\r\n    },\r\n\r\n    check() {\r\n        setChecked.call(this, true);\r\n\r\n        return this;\r\n    },\r\n    uncheck() {\r\n        setChecked.call(this, false);\r\n\r\n        return this;\r\n    },\r\n    toggle() {\r\n        setChecked.call(this, !this.isChecked());\r\n\r\n        return this;\r\n    },\r\n\r\n    reset() {\r\n        setChecked.call(this, this.defaultValue);\r\n\r\n        return this;\r\n    },\r\n    refresh() {\r\n        if (this.isChecked()) {\r\n            this.container.classList.add(\"zenui-switch--checked\");\r\n        } else {\r\n            this.container.classList.remove(\"zenui-switch--checked\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * @returns {HTMLElement}\r\n     */\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.input.addEventListener('change', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                this.input.checked = !this.input.checked;   // revert input checked state\r\n                return;\r\n            }\r\n\r\n            setChecked.call(this, this.isChecked());\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, valOrDefault } from '@std/index.js';\r\nimport { isHTMLElement } from '@dom/index.js';\r\nimport { getType, getComponents, getInput } from \"../utils.js\";\r\nimport { BaseSwitch } from './base-switch.js';\r\nimport { FormSwitch } from './form-switch.js';\r\n\r\n\r\nconst Name = {\r\n    BaseSwitch: 'switch',\r\n    FormSwitch: 'form-switch',\r\n};\r\n\r\nconst toSelector = (name) => `[data-type=\"${name}\"]`;\r\n\r\nconst Selector = {\r\n    BaseSwitch: toSelector(Name.BaseSwitch),\r\n    FormSwitch: toSelector(Name.FormSwitch),\r\n};\r\n\r\nconst Selectors = [Selector.BaseSwitch, Selector.FormSwitch].join(',');\r\n\r\nconst isValid = (element) => RegExp('switch|form-switch').test(getType(element));\r\n\r\nconst isSwitch = (element) => isHTMLElement(element) && isValid(element);\r\n\r\n\r\nconst TypeHandler = {\r\n    'switch': (container) => Object.create(BaseSwitch, {\r\n        name: { value: Name.BaseSwitch },\r\n        container: { value: container },\r\n        querySelector: { value: Selector.BaseSwitch },\r\n    }),\r\n    'form-switch': (container) => {\r\n        const input = getInput('checkbox', container);\r\n\r\n        if (!isHTMLElement(input)) {\r\n            throw new Error(\"Missing input: FormSwitch requires an input in the container\");\r\n        }\r\n\r\n        return Object.create(FormSwitch, {\r\n            name: { value: Name.FormSwitch },\r\n            container: { value: container },\r\n            input: { value: input },\r\n            querySelector: { value: Selector.FormSwitch },\r\n        });\r\n    }\r\n};\r\n\r\nexport const SwitchManager = {\r\n    /**\r\n     * Creates a `switch`\r\n     * @param {HTMLElement} container \r\n     * @param {string} [_type] \r\n     * @returns {BaseSwitch|FormSwitch}\r\n     */\r\n    create(container, _type) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A switch requires a container\");\r\n        }\r\n\r\n        const type = valOrDefault(_type, getType(container));\r\n        const handler = TypeHandler[type];\r\n\r\n        if (!isFunction(handler)) {\r\n            throw new Error(`Missing handler: The '${type}' field could not be handled`);\r\n        }\r\n\r\n        const widget = handler(container);\r\n\r\n        return widget;\r\n    },\r\n    \r\n    /**\r\n     * Activates the `switch` found in the container\r\n     * @param {HTMLElement} container \r\n     * @param {*} [_options] \r\n     * @returns {BaseSelector[]|FormSelector[]}\r\n     */\r\n    activate(container, _options) {\r\n        const components = isSwitch(container) ? [container] : getComponents(Selectors, container);\r\n        const options = valOrDefault(_options, {});\r\n    \r\n        if (isNullOrUndefined(components)) {\r\n            return null;\r\n        }\r\n    \r\n        const switches = [];\r\n    \r\n        for (let i = 0; i < components.length; i++) {\r\n            let switchWidget = this.create(components[i]);\r\n    \r\n            switchWidget.init(options);\r\n    \r\n            switches.push(switchWidget);\r\n        }\r\n    \r\n        return switches;\r\n    }\r\n};","import { isHTMLElement } from \"@dom/index.js\";\r\n\r\n/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument. The given `element` is not a valid HTMLElement\");\r\n    }\r\n\r\n    element.style.display = \"block\";\r\n}\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument. The given `element` is not a valid HTMLElement\");\r\n    }\r\n\r\n    element.style.display = \"none\";\r\n}","import { getElement, getElements, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isNullOrUndefined, isFunction, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { show, hide } from './utils.js';\r\nimport { getComponents } from './form/utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER_COLLAPSIBLE: 'BAD_CONTAINER_COLLAPSIBLE',\r\n    BAD_CONTAINER_ACCORDION: 'BAD_CONTAINER_ACCORDION',\r\n};\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER_COLLAPSIBLE: new Error(\"Missing container: A collapsible requires a container\"),\r\n    BAD_CONTAINER_ACCORDION: new Error(\"Missing container: An accordion requires a container\"),\r\n};\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    /** @returns {CollapsibleFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_COLLAPSIBLE;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    name: 'collapsible',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement} */\r\n    header: null,\r\n    /** @type {HTMLElement} */\r\n    content: null,\r\n    /** @type {Function} */\r\n    beforeOpen: null,\r\n    /** @type {Function} */\r\n    afterOpen: null,\r\n    /** @type {Function} */\r\n    beforeClose: null,\r\n    /** @type {Function} */\r\n    afterClose: null,\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    /** Verifies that the container is collapsed (closed) */\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    /** Verifies that the container is expanded (open) */\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    isClosed: false,\r\n    isInitialized: false,\r\n    /** Opens the container and calls the defined pre/post operations */\r\n    open() {\r\n        if (this.isInitialized && !this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeOpen)) {\r\n            halt = this.beforeOpen(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(show, State.OPEN, 'add');\r\n\r\n        if (isFunction(this.afterOpen)) {\r\n            this.afterOpen(this);\r\n        }\r\n\r\n        this.isClosed = false;\r\n\r\n        return this;\r\n    },\r\n    /** Closes the container and calls the defined pre/post operations */\r\n    close() {\r\n        if (this.isInitialized && this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeClose)) {\r\n            halt = this.beforeClose(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(hide, State.CLOSED, 'remove');\r\n\r\n        if (isFunction(this.afterClose)) {\r\n            this.afterClose(this);\r\n        }\r\n\r\n        this.isClosed = true;\r\n\r\n        return this;\r\n    },\r\n    toggle(displayCb, state, action) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        this.container.classList[action]('expanded');\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        this.header = getElement(`[data-${this.name}-header]`, this.container);\r\n        this.content = getElement(`[data-${this.name}-content]`, this.container);\r\n\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.isClosed = true;\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n\r\n        this.isInitialized = true;\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.isCollapsed()) {\r\n                    this.open();\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    /** @returns {AccordionFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_ACCORDION;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {CollapsibleFactory[]} */\r\n    sections: null,\r\n    /** @type {CollapsibleFactory} */\r\n    selectedSection: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    init() {\r\n        this.sections = [];\r\n\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let element = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create(element, {\r\n                name: 'accordion',\r\n                index: i,\r\n                afterOpen: (selected) => {\r\n                    if (isFunction(this.beforeChange)) {\r\n                        this.beforeChange(selected);\r\n                    }\r\n\r\n                    this.sections.filter((section) => section.index !== selected.index)\r\n                        .forEach((other) => other.close());\r\n\r\n                    if (isFunction(this.afterChange)) {\r\n                        this.afterChange(selected);\r\n                    }\r\n\r\n                    this.selectedSection = selected;\r\n                }\r\n            });\r\n            if (hasOwn(ErrorCode, collapsible)) {\r\n                return collapsible;\r\n            }\r\n            this.sections.push(collapsible);\r\n            collapsible.init();\r\n        }\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\n/**\r\n * Makes a container collapsible\r\n * @param {!HTMLElement} container \r\n * @param {Object} [options]\r\n */\r\nexport function Collapsible(container, _options) {\r\n    var collapsibleElements = getComponents(container, isCollapsible, '[data-collapsible]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(collapsibleElements)) {\r\n        return null;\r\n    }\r\n\r\n    var collapsibles = [];\r\n\r\n    for (let i = 0; i < collapsibleElements.length; i++) {\r\n        let collapsible = CollapsibleFactory.create(collapsibleElements[i], options);\r\n        if (hasOwn(ErrorHandler, collapsible)) {\r\n            throw ErrorHandler[collapsible];\r\n        }\r\n        collapsible.init();\r\n\r\n        collapsibles.push(collapsible);\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Transforms a container into an accordion\r\n * @param {!HTMLElement} container \r\n * @param {Object} [_options]\r\n */\r\nexport function Accordion(container, _options) {\r\n    var accordionElements = getComponents(container, isAccordion, '[data-boost=accordion]');\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(accordionElements)) {\r\n        return null;\r\n    }\r\n\r\n    var accordions = [];\r\n\r\n    for (let i = 0; i < accordionElements.length; i++) {\r\n        let accordion = AccordionFactory.create(accordionElements[i], options);\r\n        if (hasOwn(ErrorHandler, accordion)) {\r\n            throw ErrorHandler[accordion];\r\n        }\r\n        accordion.init();\r\n        accordions.push(accordion);\r\n    }\r\n\r\n    return accordions;\r\n}\r\n","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\n\r\n\r\n/**\r\n * Add a counter to an input element\r\n * @param {HTMLElement} container \r\n */\r\nexport function inputCounter(container) {\r\n    const counters = getElements('[data-counter]', container);\r\n\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let ref = counter.dataset['counter'];\r\n        let input = getElement(`#${ref}`);\r\n        if (isHTMLElement(input)) {\r\n            counter.dataset['counterMax'] = input.maxLength;\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            bindEvents(input, counter);\r\n        } else {\r\n            console.error(`%c@zenkai%c #InputCounter>%cinputCounter:%c Failed to add counter ${ref}. Input (referenced) was not found.`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLElement} counter \r\n     */\r\n    function bindEvents(input, counter) {\r\n        input.addEventListener('input', function (e) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n        });\r\n    }\r\n\r\n    return counters;\r\n}"],"names":["valOrDefault","arg","value","isUndefined","isNullOrUndefined","isEmpty","obj","isIterable","length","isString","String","isFunction","isObject","_typeof","Symbol","iterator","isNull","isNullOrWhitespace","test","hasOwn","key","hasOwnProperty","call","Object","prototype","pascalCase","str","ccString","replace","trim","toLowerCase","s","toUpperCase","isElementNode","nodeType","Node","ELEMENT_NODE","isNode","isElement","Element","isHTMLElement","kind","HTMLElement","element","Array","isArray","some","name","type","tag","interfaceName","TagNameMapping","window","tagName","includes","isDocumentFragment","DOCUMENT_FRAGMENT_NODE","DocumentFragment","_htmlToElement","prop","html","template","document","createElement","innerHTML","content","bind","formatClass","val","assign","assignAttribute","setAttribute","GLOBAL_ATTRIBUTES","AttributeHandler","accesskey","autocapitalize","addClass","TypeError","classList","add","formattedValue","className","split","dataset","draggable","editable","hidden","id","inputmode","lang","style","tabindex","text","title","download","ping","target","coords","shape","autoplay","buffered","controls","loop","muted","playsinline","poster","preload","accept","action","autocomplete","autofocus","capture","checked","cols","disabled","dirname","enctype","form","formaction","formenctype","formmethod","formnovalidate","formtarget","high","label","list","low","max","maxlength","method","min","minlength","multiple","novalidate","optimum","pattern","placeholder","readonly","required","rows","selected","size","spellcheck","step","wrap","crossorigin","decoding","height","ismap","loading","srcset","width","alt","as","media","rel","src","sizes","reversed","start","charset","data","cite","abbr","colspan","span","rowspan","scope","srclang","href","hreflang","datetime","usemap","createEmptyElement","_validAttributes","_attributes","attribute","validAttributes","keys","args","slice","fn","shift","addAttributes","_content","append","addContent","isClassSelector","selector","isIdSelector","getElement","_container","container","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","getElementSibling","dir","pred","sibling","findAncestor","_max","parent","parentElement","findAncestorIter","findAncestorInf","removeChildren","node","_callback","from","childNodes","forEach","n","removeChild","hasChildNodes","lastChild","removeAllChildren","moveDown","moveUp","remove","getType","getValue","getState","setState","check","uncheck","getComponents","getInput","htmlFor","Status","getItem","isValid","el","BaseSelectorItem","index","init","this","setChecked","isChecked","setIndex","selectorIndex","destroy","BaseSelector","defaultValue","items","selectedIndex","selectedItem","beforeChange","afterChange","itemContainers","defaultItem","i","item","createItem","setSelectedItem","bindEvents","create","addItem","push","refresh","Number","isInteger","find","removeItem","splice","render","addEventListener","event","halt","_this","toSelector","isSelector","RegExp","FormSelectorItem","input","FormSelector","Error","Name","Selector","Selectors","join","TypeHandler","SelectorManager","_type","handler","activate","_options","components","options","selectors","BaseSwitch","toggle","reset","isSwitch","FormSwitch","SwitchManager","switches","switchWidget","show","display","hide","isCollapsible","isAccordion","ErrorCode","BAD_CONTAINER_COLLAPSIBLE","BAD_CONTAINER_ACCORDION","ErrorHandler","State","CollapsibleFactory","instance","header","beforeOpen","afterOpen","beforeClose","afterClose","isCollapsed","isExpanded","isClosed","isInitialized","open","close","displayCb","state","e","targetCollapsible","parentNode","AccordionFactory","sections","selectedSection","accordionElements","collapsible","_this2","filter","section","other","accordions","accordion","collapsibleElements","collapsibles","labels","console","warn","error","activeElement","counters","counter","ref","maxLength"],"mappings":"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"}