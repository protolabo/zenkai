{"version":3,"file":"zenkai-dom.min.js","sources":["../src/std/std-parse.js","../src/std/std-object.js","../src/std/std-string.js","../src/std/std-logic.js","../src/dom/dom-stat.js","../src/dom/dom-parse.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/dom/copy-to-clipboard.js","../src/dom/dom-remove.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable=false] indicates whether the value can be assigned the value *NULL*\r\n * @memberof STD\r\n */\r\nexport function valOrDefault(arg, value, isNullable = false) {\r\n    if (isNullable) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isEmpty(obj) {\r\n    return isIterable(obj) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is a non-string iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isCollection(obj) {\r\n    return isIterable(obj) && !isString(obj);\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} value string\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrWhitespace(value) {\r\n    return (!value || isString(value) && (value.length === 0 || /^\\s*$/.test(value)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { isObject, isNullOrUndefined } from \"./std-parse.js\";\r\n\r\n\r\n/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) {\r\n    return hasOwnProperty.call(obj, key);\r\n};\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * Creates a clone of an object\r\n * @param {*} obj Object\r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (isNullOrUndefined(obj) || !isObject(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace, isString } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Casing (camel, pascal, upper, lower)\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}\r\n\r\n/**\r\n * Verifies that a character is a vowel\r\n * @param {string} char String character\r\n */\r\nexport function isVowel(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    return \"aeiou\".includes(char.toLowerCase());\r\n}\r\n\r\n/**\r\n * Verifies that a character is a consonant\r\n * @param {string} char String character\r\n */\r\nexport function isConsonant(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    return \"bcdfghjklmnpqrstvwxyz\".includes(char.toLowerCase());\r\n}\r\n\r\n/**\r\n * Verifies that a character is uppercase\r\n * @param {string} char String character\r\n */\r\nexport function isUpperCase(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    let charCode = char.charCodeAt(0);\r\n\r\n    return charCode >= 65 && charCode <= 90;\r\n}\r\n\r\n/**\r\n * Verifies that a character is lowercase\r\n * @param {string} char String character\r\n */\r\nexport function isLowerCase(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    let charCode = char.charCodeAt(0);\r\n\r\n    return charCode >= 97 && charCode <= 122;\r\n}","import { isFunction } from \"./std-parse.js\";\r\n\r\n\r\n/**\r\n * Verifies that the condition is satisfied for a specified number (range) of value\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @param {number} [max] Maximum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether the condition is satisfied for the specified range\r\n * @memberof STD\r\n */\r\nexport const assert = function (values, pred, min, max) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    var hitCount = getHitCount(values, pred);\r\n\r\n    if (all([min, max], Number.isInteger)) {\r\n        if (max < min) {\r\n            throw new Error(\"Bad argument: max must be greater than min\");\r\n        }\r\n\r\n        return hitCount >= min && hitCount <= max;\r\n    }\r\n\r\n    if (Number.isInteger(min)) {\r\n        return hitCount >= min;\r\n    }\r\n\r\n    if (Number.isInteger(max)) {\r\n        return hitCount <= max;\r\n    }\r\n\r\n    return hitCount > 0;\r\n};\r\n\r\n/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const some = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof STD\r\n */\r\nexport const all = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (!pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const one = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const no = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) === 0;\r\n};\r\n\r\n/**\r\n * Verifies that at most one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at most one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const lone = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) <= 1;\r\n};\r\n\r\n/**\r\n * Gets the number of values that satisfy the condition\r\n * @param {*[]} values \r\n * @param {Function} pred \r\n * @returns {number}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, pred) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport const windowWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\r\n/**\r\n * Gets the window's height\r\n * @memberof DOM\r\n */\r\nexport const windowHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;","import { isNullOrUndefined, isString, isIterable, hasOwn, pascalCase, isEmpty, all, some, isCollection } from '@std/index.js';\r\nimport { windowWidth, windowHeight } from './dom-stat.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTML Element*\r\n * @param {Element} obj \r\n * @param {string|string[]|string[][]} [kind] \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj, kind) => {\r\n    if (!(isElementNode(obj) && obj instanceof HTMLElement)) {\r\n        return false;\r\n    }\r\n\r\n    if (isIterable(kind)) {\r\n        return isHTMLElementKind(obj, Array.isArray(kind) ? kind : [kind]);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst TagNameMapping = {\r\n    'a': \"Anchor\",\r\n    'br': \"BR\",\r\n    'dl': \"DList\",\r\n    'datalist': \"DataList\",\r\n    'fieldset': \"FieldSet\",\r\n    'frameset': \"FrameSet\",\r\n    'hr': \"HR\",\r\n    'h1': \"Heading\",\r\n    'h2': \"Heading\",\r\n    'h3': \"Heading\",\r\n    'h4': \"Heading\",\r\n    'h5': \"Heading\",\r\n    'h6': \"Heading\",\r\n    'li': \"LI\",\r\n    'ol': \"OList\",\r\n    'optgroup': \"OptGroup\",\r\n    'p': \"Paragraph\",\r\n    'q': \"Quote\",\r\n    'blockquote': \"Quote\",\r\n    'caption': \"TableCaption\",\r\n    'td': \"TableCell\",\r\n    'th': \"TableCell\",\r\n    'col': \"TableCol\",\r\n    'tr': \"TableRow\",\r\n    'tbody': \"TableSection\",\r\n    'thead': \"TableSection\",\r\n    'tfoot': \"TableSection\",\r\n    'textarea': \"TextArea\",\r\n    'ul': \"UList\",\r\n};\r\n\r\n/**\r\n * Verifies the tag of an *HTML Element*\r\n * @param {HTMLElement} element \r\n * @param {string[]|string[][]} kinds\r\n * @returns {boolean}\r\n * @private\r\n */\r\nfunction isHTMLElementKind(element, kinds) {\r\n    const isInstanceOf = (obj) => element instanceof obj;\r\n    const hasTag = (tag) => element.tagName === tag.toUpperCase();\r\n    const isOfType = (type) => Array.isArray(type) ? type.includes(element.type) : element.type === type;\r\n    \r\n    return kinds.some((kind) => {\r\n        if (!isIterable(kind)) {\r\n            return false;\r\n        }\r\n\r\n        var name = kind;\r\n        var type = null;\r\n        \r\n        if (Array.isArray(kind)) {\r\n            [name, type] = kind;\r\n        }\r\n\r\n        name = name.toLowerCase();\r\n        var interfaceName = `HTML${hasOwn(TagNameMapping, name) ? TagNameMapping[name] : pascalCase(name)}Element`;\r\n\r\n        if (!(isInstanceOf(window[interfaceName]) || hasTag(name))) {\r\n            return false;\r\n        }\r\n\r\n        if (isCollection(type) && !isEmpty(type)) {\r\n            return isOfType(type);\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Converts an html string to an HTML Element or a list of HTML Elements\r\n * @param {!string} prop \r\n * @param {!string} html \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction _htmlToElement(prop, html) {\r\n    if (!isString(html)) {\r\n        return null;\r\n    }\r\n\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content[prop];\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElement = _htmlToElement.bind(null, 'firstChild');\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElements = _htmlToElement.bind(null, 'childNodes');\r\n\r\n/**\r\n * Verifies that an element is visible\r\n * @param {!HTMLElement} element \r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInViewport(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' is not a valid HTML Element\");\r\n    }\r\n\r\n    const { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return top >= 0 && left >= 0 && bottom <= windowHeight() && right <= windowWidth();\r\n}\r\n\r\n/**\r\n * Verifies that an element is displayed inside a target element\r\n * @param {!HTMLElement} element \r\n * @param {!HTMLElement} target\r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInElement(element, target) {\r\n    if (!all([element, target], isHTMLElement)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' is not a valid HTML Element\");\r\n    }\r\n\r\n    const { top: top1, right: right1, bottom: bottom1, left: left1 } = element.getBoundingClientRect();\r\n    const { top: top2, right: right2, bottom: bottom2, left: left2 } = target.getBoundingClientRect();\r\n\r\n    return all([[top2, top1], [left2, left1], [right1, right2], [bottom1, bottom2]], (inner, outer) => inner <= outer);\r\n}","import { isObject, isNullOrUndefined, isIterable, isNullOrWhitespace, isString } from '@std/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} val class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (val) => val.replace(/\\s+/g, ' ').trim();\r\n\r\n\r\n/**\r\n * Add classes to an element\r\n * @param {HTMLElement} element \r\n * @param {string|string[]} value \r\n * @private\r\n * @memberof DOM\r\n */\r\nfunction addClass(element, value) {\r\n    if (!isIterable(value)) {\r\n        throw new TypeError(\"Bad argument: The passed `value` argument is not a string or array\");\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n        element.classList.add(...value);\r\n    } else {\r\n        let formattedValue = formatClass(value);\r\n\r\n        if (isNullOrWhitespace(element.className)) {\r\n            element.className = formattedValue;\r\n        } else {\r\n            addClass(element, formattedValue.split(' '));\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {string} value \r\n * @private\r\n */\r\nfunction assign(element, key, value) {\r\n    element[key] = value;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignObject(element, key, value) {\r\n    Object.assign(element[key], value);\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignAttribute(element, key, value) {\r\n    element.setAttribute(key, value);\r\n}\r\n\r\nconst GLOBAL_ATTRIBUTES = \"accesskey,autocapitalize,class,dataset,editable,draggable,hidden,id,inputmode,lang,style,tabindex,title\";\r\n\r\nconst AttributeHandler = {\r\n    // Global attributes\r\n    accesskey: [assign, 'accessKey'],\r\n    autocapitalize: [assign, 'autocapitalize'],\r\n    class: [addClass],\r\n    dataset: [assignObject, 'dataset'],\r\n    draggable: [assign, 'draggable'],\r\n    editable: [assign, 'contentEditable'],\r\n    hidden: [assign, 'hidden'],\r\n    id: [assign, 'id'],\r\n    inputmode: [assign, 'inputMode'],\r\n    lang: [assign, 'lang'],\r\n    html: [assign, 'innerHTML'],\r\n    style: [assign, 'style'],\r\n    tabindex: [assign, 'tabIndex'],\r\n    text: [assign, 'textContent'],\r\n    title: [assign, 'title'],\r\n    // Anchor attributes\r\n    download: [assign, 'download'],\r\n    ping: [assign, 'ping'],\r\n    target: [assign, 'target'],\r\n    // Area attributes\r\n    coords: [assign, 'coords'],\r\n    shape: [assign, 'shape'],\r\n    // Audio/Video attributes\r\n    autoplay: [assign, 'autoplay'],\r\n    buffered: [assign, 'buffered'],\r\n    controls: [assign, 'controls'],\r\n    loop: [assign, 'loop'],\r\n    muted: [assign, 'muted'],\r\n    playsinline: [assignAttribute, 'playsinline'],\r\n    poster: [assign, 'poster'],\r\n    preload: [assign, 'preload'],\r\n    // Form attributes\r\n    accept: [assign, 'accept'],\r\n    \"accept-charset\": [assign, 'acceptCharset'],\r\n    action: [assign, 'action'],\r\n    autocomplete: [assign, 'autocomplete'],\r\n    autofocus: [assign, 'autofocus'],\r\n    capture: [assign, 'capture'],\r\n    checked: [assign, 'checked'],\r\n    cols: [assign, 'cols'],\r\n    disabled: [assign, 'disabled'],\r\n    dirname: [assign, 'dirName'],\r\n    enctype: [assign, 'enctype'],\r\n    for: [assign, 'htmlFor'],\r\n    form: [assign, 'form'],\r\n    formaction: [assign, 'formAction'],\r\n    formenctype: [assign, 'formEnctype'],\r\n    formmethod: [assign, 'formMethod'],\r\n    formnovalidate: [assign, 'formNoValidate'],\r\n    formtarget: [assign, 'formTarget'],\r\n    high: [assign, 'high'],\r\n    label: [assign, 'label'],\r\n    list: [assign, 'list'],\r\n    low: [assign, 'low'],\r\n    max: [assign, 'max'],\r\n    maxlength: [assign, 'maxLength'],\r\n    method: [assign, 'method'],\r\n    min: [assign, 'min'],\r\n    minlength: [assign, 'minLength'],\r\n    multiple: [assign, 'multiple'],\r\n    novalidate: [assign, 'noValidate'],\r\n    optimum: [assign, 'optimum'],\r\n    pattern: [assign, 'pattern'],\r\n    placeholder: [assign, 'placeholder'],\r\n    readonly: [assign, 'readOnly'],\r\n    required: [assign, 'required'],\r\n    rows: [assign, 'rows'],\r\n    selected: [assign, 'selected'],\r\n    size: [assign, 'size'],\r\n    spellcheck: [assignAttribute, 'spellcheck'],\r\n    step: [assign, 'step'],\r\n    wrap: [assign, 'wrap'],\r\n    // Image attributes\r\n    crossorigin: [assign, 'crossOrigin'],\r\n    decoding: [assign, 'decoding'],\r\n    height: [assign, 'height'],\r\n    ismap: [assign, 'isMap'],\r\n    loading: [assign, 'loading'],\r\n    srcset: [assign, 'srcset'],\r\n    width: [assign, 'width'],\r\n    // Link attributes\r\n    alt: [assign, 'alt'],\r\n    as: [assign, 'as'],\r\n    media: [assign, 'media'],\r\n    rel: [assign, 'rel'],\r\n    src: [assign, 'src'],\r\n    sizes: [assign, 'sizes'],\r\n    // List attributes\r\n    reversed: [assign, 'reversed'],\r\n    start: [assign, 'start'],\r\n    // Meta attributes\r\n    charset: [assignAttribute, 'charset'],\r\n    content: [assign, 'content'],\r\n    \"http-equiv\": [assign, 'httpEquiv'],\r\n    // Object attributes\r\n    data: [assign, 'data'],\r\n    // Quote attributes\r\n    cite: [assign, 'cite'],\r\n    // Table attributes\r\n    abbr: [assign, 'abbr'],\r\n    colspan: [assign, 'colSpan'],\r\n    span: [assign, 'span'],\r\n    rowspan: [assign, 'rowSpan'],\r\n    scope: [assign, 'scope'],\r\n    // Track attributes\r\n    default: [assign, 'default'],\r\n    kind: [assign, 'kind'],\r\n    srclang: [assign, 'srclang'],\r\n    // Mix attributes\r\n    href: [assign, 'href'],\r\n    hreflang: [assign, 'hreflang'],\r\n    datetime: [assign, 'dateTime'],\r\n    name: [assign, 'name'],\r\n    type: [assign, 'type'],\r\n    value: [assign, 'value'],\r\n    usemap: [assign, 'useMap'],\r\n};\r\n\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute, validAttributes) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' argument is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isObject(attribute)) {\r\n        return element;\r\n    }\r\n\r\n    const isValid = (key) => GLOBAL_ATTRIBUTES.includes(key) || isNullOrUndefined(validAttributes) || validAttributes.includes(key);\r\n\r\n    for (const key of Object.keys(attribute)) {\r\n        if (isValid(key)) {\r\n            let value = attribute[key];\r\n            let args = AttributeHandler[key].slice(0);\r\n            let fn = args.shift();\r\n\r\n            if (!isNullOrUndefined(value)) {\r\n                fn(element, ...args, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {!string} optValue option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectedValue(select, optValue) {\r\n    if (!isHTMLElement(select, \"select\")) {\r\n        throw new TypeError(\"Bad argument: The given 'select' argument is not a valid HTML Select element\");\r\n    }\r\n\r\n    if (!(isString(optValue) || isObject(optValue))) {\r\n        throw new TypeError(\"Bad argument: The given 'optValue' argument is a null or undefined\");\r\n    }\r\n\r\n    /**\r\n     * Object equality\r\n     * @param {HTMLOptionElement} option \r\n     * @param {*} obj \r\n     */\r\n    const objectEq = (option, obj) => option.value === obj.value || option.text === obj.text;\r\n\r\n    /**\r\n     * String equality\r\n     * @param {HTMLOptionElement} option \r\n     * @param {string} obj \r\n     */\r\n    const stringEq = (option, value) => option.value === value;\r\n\r\n    const eqHandler = isString(optValue) ? stringEq : objectEq;\r\n\r\n    const { options, multiple } = select;\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n        let option = options[i];\r\n\r\n        if (eqHandler(option, optValue)) {\r\n            if (!multiple) {\r\n                Array.from(select.selectedOptions).forEach(opt => opt.selected = false);\r\n            }\r\n            option.selected = true;\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { isNullOrUndefined, isObject, valOrDefault, isIterable, isString } from \"@std/index.js\";\r\nimport { isHTMLElement, isNode } from \"./dom-parse.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n\r\n/**\r\n * Creates an empty element with attributes\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {object} [_attributes] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createEmptyElement(tagName, _validAttributes, _attributes) {\r\n    const element = document.createElement(tagName);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (isObject(_attributes)) {\r\n        addAttributes(element, _attributes, valOrDefault(_validAttributes, \"\"));\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates an element with attributes and content\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {Function} [contentResolver] \r\n * @param {object} [_attributes] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_content] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createElement(tagName, _validAttributes, _attributes, _content) {\r\n    const element = createEmptyElement(tagName, _validAttributes, _attributes);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isNullOrUndefined(_content)) {\r\n        addContent(element, _content);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n\r\n// TODO: createScript\r\n\r\n// TODO: createStyle\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment(_children) {\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(fragment, _children);\r\n    }\r\n\r\n    return fragment;\r\n}\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n\r\n/******************************************************************************\r\n * Metadata Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates an `<base>` element with some attributes\r\n * @function createBase\r\n * @param {object} _attribute \r\n * @returns {HTMLBaseElement}\r\n * @memberof DOM\r\n */\r\nexport const createBase = createEmptyElement.bind(null, \"base\", \"href,target\");\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport const createLink = createEmptyElement.bind(null, \"link\", \"as,crossorigin,disabled,href,hreflang,media,rel,sizes,type\");\r\n\r\n/**\r\n * Creates a `<meta>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLMetaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeta = createEmptyElement.bind(null, \"meta\", \"charset,content,http-equiv,name\");\r\n\r\n/**\r\n * Creates a `<title>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTitleElement}\r\n * @memberof DOM\r\n */\r\nexport const createTitle = createElement.bind(null, \"title\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = createElement.bind(null, \"template\", \"html,text\");\r\n\r\n\r\n/******************************************************************************\r\n * Sectionning Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = createElement.bind(null, \"header\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = createElement.bind(null, \"footer\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = createElement.bind(null, \"main\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = createElement.bind(null, \"article\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = createElement.bind(null, \"section\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = createElement.bind(null, \"nav\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = createElement.bind(null, \"aside\", \"html,text\");\r\n\r\n\r\n/******************************************************************************\r\n * Heading Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = createElement.bind(null, \"h1\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = createElement.bind(null, \"h2\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = createElement.bind(null, \"h3\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = createElement.bind(null, \"h4\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = createElement.bind(null, \"h5\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = createElement.bind(null, \"h6\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = createElement.bind(null, \"div\", \"html,text\");\r\n\r\n\r\n\r\n/**\r\n * Creates a `<br>` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @returns {HTMLBRElement}\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = createEmptyElement.bind(null, \"br\", \"\");\r\n\r\n/**\r\n * Creates a `<hr>` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @returns {HTMLHRElement}\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = createEmptyElement.bind(null, \"hr\", \"\");\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = createElement.bind(null, \"p\", \"html,text\");\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function createBlockQuotation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createBlockQuotation = createElement.bind(null, \"blockquote\", \"cite,html,text\");\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = createElement.bind(null, \"ul\", \"html\");\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = createElement.bind(null, \"ol\", \"html,reversed,start,type\");\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = createElement.bind(null, \"li\", \"html,text,value\");\r\n\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = createElement.bind(null, \"dl\", \"html\");\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = createElement.bind(null, \"dt\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = createElement.bind(null, \"dd\", \"html,text\");\r\n\r\n/******************************************************************************\r\n * Inline Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @function createAnchor\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport const createAnchor = createElement.bind(null, \"a\", \"download,href,hreflang,html,ping,rel,target,text,type\");\r\n\r\n/**\r\n * Creates an `<area>` element with some attributes\r\n * @function createArea\r\n * @param {object} _attribute \r\n * @returns {HTMLAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createArea = createEmptyElement.bind(null, \"area\", \"alt,coords,download,href,hreflang,media,ping,rel,shape,target\");\r\n\r\n\r\n/******************************************************************************\r\n * Embedded Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<audio>` element with some attributes\r\n * @function createAudio\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children\r\n * @returns {HTMLAudioElement}\r\n * @memberof DOM\r\n */\r\nexport const createAudio = createElement.bind(null, \"audio\", \"autoplay,controls,crossorigin,html,loop,muted,preload,src,text\");\r\n\r\n/**\r\n * Creates a `<img>` element with some attributes\r\n * @function createImage\r\n * @param {object} _attribute \r\n * @returns {HTMLImageElement}\r\n * @memberof DOM\r\n */\r\nexport const createImage = createEmptyElement.bind(null, \"img\", \"alt,crossorigin,decoding,height,ismap,loading,sizes,src,srcset,usemap,width\");\r\n\r\n/**\r\n * Creates a `<embed>` element with some attributes\r\n * @function createEmbed\r\n * @param {object} _attribute \r\n * @returns {HTMLEmbedElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmbed = createEmptyElement.bind(null, \"embed\", \"height,src,type,width\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = createElement.bind(null, \"figure\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = createElement.bind(null, \"figcaption\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<object>` element with some attributes\r\n * @function createObject\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLObjectElement}\r\n * @memberof DOM\r\n */\r\nexport const createObject = createElement.bind(null, \"object\", \"data,height,html,name,text,type,usemap,width\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = createElement.bind(null, \"picture\", \"html\");\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = createEmptyElement.bind(null, \"source\", \"media,sizes,src,srcset,type\");\r\n\r\n/**\r\n * Creates a `<track>` element with some attributes\r\n * @function createTrack\r\n * @param {object} _attribute \r\n * @returns {HTMLTrackElement}\r\n * @memberof DOM\r\n */\r\nexport const createTrack = createEmptyElement.bind(null, \"track\", \"default,kind,label,src,srclang\");\r\n\r\n/**\r\n * Creates a `<video>` element with some attributes\r\n * @function createVideo\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLVideoElement}\r\n * @memberof DOM\r\n */\r\nexport const createVideo = createElement.bind(null, \"video\", \"autoplay,controls,crossorigin,height,html,loop,muted,playsinline,poster,preload,src,text,width\");\r\n\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = createElement.bind(null, \"span\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = createElement.bind(null, \"strong\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = createElement.bind(null, \"em\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = createElement.bind(null, \"mark\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = createElement.bind(null, \"samp\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = createElement.bind(null, \"sub\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = createElement.bind(null, \"sup\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<del>` element with some attributes\r\n * @function createDeletedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createDeletedPart = createElement.bind(null, \"del\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<ins>` element with some attributes\r\n * @function createInsertedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createInsertedPart = createElement.bind(null, \"ins\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createQuote = createElement.bind(null, \"q\", \"cite,html,text\");\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = createElement.bind(null, \"abbr\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = createElement.bind(null, \"b\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = createElement.bind(null, \"i\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = createElement.bind(null, \"s\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = createElement.bind(null, \"u\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = createElement.bind(null, \"cite\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @function createTime\r\n * @param {object} _attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport const createTime = createElement.bind(null, \"time\", \"datetime,html,text\");\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = createElement.bind(null, \"code\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFormElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = createElement.bind(null, \"form\", \"accept-charset,action,autocomplete,enctype,html,method,name,novalidate,rel,target,text\");\r\n\r\nconst inputTypes = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createEmptyElement.bind(null, \"input\", \"accept,alt,autocomplete,autofocus,capture,checked,dirname,disabled,height,max,maxlength,minlength,min,multiple,name,pattern,placeholder,readonly,required,size,src,step,type,value,width\");\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = createElement.bind(null, \"textarea\", \"autocomplete,autofocus,cols,disabled,html,maxlength,minlength,name,placeholder,readonly,required,rows,spellcheck,text,value,wrap\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = createElement.bind(null, \"label\", \"for,html,text\");\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSelectElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = createElement.bind(null, 'select', \"autocomplete,autofocus,disabled,html,multiple,name,required,size\");\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = createElement.bind(null, \"option\", \"disabled,html,label,selected,text,value\");\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptGroupElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = createElement.bind(null, \"optgroup\", \"disabled,html,label\");\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFieldSetElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = createElement.bind(null, \"fieldset\", \"disabled,html,name,text\");\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = createElement.bind(null, \"legend\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = createElement.bind(null, \"datalist\", \"html\");\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = createElement.bind(null, \"meter\", \"high,html,low,max,min,optimum,text,value\");\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = createElement.bind(null, \"progress\", \"html,max,text,value\");\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = createElement.bind(null, \"output\", \"html,name,text,value\");\r\n\r\nconst buttonTypes = [\"button\", \"submit\", \"reset\"];\r\n\r\n/**\r\n * Creates a `<button>` element with optionally some attributes and children elements\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLButtonElement}\r\n * @memberof DOM\r\n */\r\nexport const createButton = createElement.bind(null, \"button\", \"autofocus,disabled,formaction,formenctype,formmethod,formnovalidate,formtarget,html,name,text,type,value\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = createElement.bind(null, \"table\", \"html\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = createElement.bind(null, \"caption\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = createElement.bind(null, \"thead\", \"html\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = createElement.bind(null, \"tbody\", \"html\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = createElement.bind(null, \"tfoot\", \"html\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = createEmptyElement.bind(null, \"col\", \"span\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = createElement.bind(null, \"colgroup\", \"html,span\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = createElement.bind(null, \"tr\", \"html\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = createElement.bind(null, \"th\", \"abbr,colspan,html,rowspan,scope,text\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children\r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = createElement.bind(null, \"td\", \"colspan,html,rowspan,text\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {Node} element element\r\n * @param {HTMLCollection} content children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, content) {\r\n    if (!(isNode(content) || isIterable(content))) {\r\n        return element;\r\n    }\r\n\r\n    if (isNode(content) || isString(content)) {\r\n        element.append(content);\r\n    } else {\r\n        element.append(...content);\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@std/index.js';\r\nimport { isElement, isHTMLElement, isDocumentFragment, isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    const container = isNode(_container) ? _container : document;\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    const container = isNode(_container) ? _container : document;\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {string} dir sibling direction\r\n * @param {HTMLElement} element element\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(dir, element, pred) {\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    var sibling = element[dir];\r\n\r\n    if (isFunction(pred)) {\r\n        while (isElement(sibling) && !pred(sibling)) {\r\n            sibling = sibling[dir];\r\n        }\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @function getPreviousElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport const getPreviousElementSibling = getElementSibling.bind(null, \"previousElementSibling\");\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @function getNextElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport const getNextElementSibling = getElementSibling.bind(null, \"nextElementSibling\");\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {!Element} target \r\n * @param {!Function} pred Decides whether the target is found\r\n * @param {number} [_max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, pred, _max) {\r\n    if (!isElement(target)) {\r\n        throw new TypeError(\"Bad argument: The given target parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isFunction(pred)) {\r\n        throw new TypeError(\"Bad argument: The given pred parameter is not a valid Function\");\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n\r\n    if (_max > 0) {\r\n        return findAncestorIter(parent, pred, _max - 1);\r\n    }\r\n\r\n    return findAncestorInf(parent, pred);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, pred) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, pred);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} max Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, pred, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, pred, max - 1);\r\n}","import { isNullOrUndefined } from '@std/index.js';\r\nimport { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Copies selected content to clipboard\r\n * @param {HTMLElement|string} value\r\n * @returns {boolean} Value indicating whether the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value.toString(),\r\n        readonly: true\r\n    });\r\n\r\n    if(!isHTMLElement(element)) {\r\n        return false;\r\n    }\r\n\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","import { isFunction } from '@std/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfy the predicate function if given\r\n * @param {!Node} node \r\n * @param {Function} [_callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, _callback) {\r\n    if (!isNode(node)) {\r\n        throw new TypeError(\"Bad argument: The given `node` is not a valid Node\");\r\n    }\r\n\r\n    if (isFunction(_callback)) {\r\n        Array.from(node.childNodes).forEach(n => {\r\n            if (_callback(n)) {\r\n                node.removeChild(n);\r\n            }\r\n        });\r\n\r\n        return node;\r\n    }\r\n\r\n    return removeAllChildren(node);\r\n\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}"],"names":["valOrDefault","arg","value","isUndefined","isNullOrUndefined","isString","String","isFunction","isObject","_typeof","isIterable","obj","Symbol","iterator","isNullOrWhitespace","length","test","hasOwnProperty","Object","prototype","pascalCase","str","ccString","replace","trim","toLowerCase","s","toUpperCase","all","values","pred","Array","isArray","TypeError","i","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","windowHeight","innerHeight","clientHeight","isElementNode","nodeType","Node","ELEMENT_NODE","isElement","Element","isNode","isHTMLElement","kind","HTMLElement","element","some","name","type","key","tag","interfaceName","TagNameMapping","call","tagName","includes","isDocumentFragment","DOCUMENT_FRAGMENT_NODE","DocumentFragment","_htmlToElement","prop","html","template","createElement","innerHTML","content","htmlToElement","bind","htmlToElements","formatClass","val","assign","assignAttribute","setAttribute","GLOBAL_ATTRIBUTES","AttributeHandler","accesskey","autocapitalize","addClass","classList","add","formattedValue","className","split","dataset","draggable","editable","hidden","id","inputmode","lang","style","tabindex","text","title","download","ping","target","coords","shape","autoplay","buffered","controls","loop","muted","playsinline","poster","preload","accept","action","autocomplete","autofocus","capture","checked","cols","disabled","dirname","enctype","form","formaction","formenctype","formmethod","formnovalidate","formtarget","high","label","list","low","max","maxlength","method","min","minlength","multiple","novalidate","optimum","pattern","placeholder","readonly","required","rows","selected","size","spellcheck","step","wrap","crossorigin","decoding","height","ismap","loading","srcset","width","alt","as","media","rel","src","sizes","reversed","start","charset","data","cite","abbr","colspan","span","rowspan","scope","srclang","href","hreflang","datetime","usemap","addAttributes","attribute","validAttributes","keys","args","slice","fn","shift","createEmptyElement","_validAttributes","_attributes","_content","addContent","createBase","createLink","createMeta","createTitle","createTemplate","createHeader","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createLineBreak","createThematicBreak","createParagraph","createBlockQuotation","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createAnchor","createArea","createAudio","createImage","createEmbed","createFigure","createFigureCaption","createObject","createPicture","createSource","createTrack","createVideo","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createDeletedPart","createInsertedPart","createQuote","createAbbreviation","createB","createI","createS","createU","createCite","createTime","createCode","createForm","createInput","createTextArea","createLabel","createSelect","createOption","createOptionGroup","createFieldset","createLegend","createDataList","createMeter","createProgress","createOutput","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","append","isClassSelector","selector","isIdSelector","getElement","_container","container","querySelector","getElementById","substring","getElementsByClassName","getElementSibling","dir","sibling","getPreviousElementSibling","getNextElementSibling","select","optValue","eqHandler","option","options","from","selectedOptions","forEach","opt","deep","importNode","textContent","toString","appendChild","execCommand","remove","_children","fragment","createDocumentFragment","createTextNode","_max","parent","parentElement","findAncestorIter","findAncestorInf","querySelectorAll","HTMLCollection","getBoundingClientRect","top1","top","right1","right","bottom1","bottom","left1","left","top2","right2","bottom2","left2","inner","outer","NodeList","node","_callback","childNodes","n","removeChild","hasChildNodes","lastChild","removeAllChildren"],"mappings":"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"}