{"version":3,"file":"zenkai.min.js","sources":["../src/std/std-parse.js","../src/std/std-datetime.js","../src/std/std-object.js","../src/std/std-string.js","../src/std/std-logic.js","../src/std/std-path.js","../src/dom/dom-stat.js","../src/dom/dom-parse.js","../src/dom/element-manip.js","../src/dom/dom-create.js","../src/dom/dom-query.js","../src/dom/dom-remove.js","../src/ui/form/floating-label.js","../src/ui/form/utils.js","../src/ui/form/selector/base-selector.js","../src/ui/form/selector/form-selector.js","../src/ui/form/selector/factory.js","../src/ui/form/switch/base-switch.js","../src/ui/form/switch/form-switch.js","../src/ui/form/switch/factory.js","../src/ui/utils.js","../src/ui/collapsible.js","../src/utils/uri-utils.js","../src/std/std-convert.js","../src/dom/copy-to-clipboard.js","../src/std/std-ajax.js","../src/std/std-array.js","../src/ui/form/input-counter.js","../src/std/std-math.js"],"sourcesContent":["/**\r\n * Returns an object value or default value if undefined\r\n * @param {*} arg object\r\n * @param {*} value default value\r\n * @param {boolean} [isNullable=false] indicates whether the value can be assigned the value *NULL*\r\n * @memberof STD\r\n */\r\nexport function valOrDefault(arg, value, isNullable = false) {\r\n    if (isNullable) {\r\n        return isUndefined(arg) ? value : arg;\r\n    }\r\n\r\n    return isNullOrUndefined(arg) ? value : arg;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is empty\r\n * @param {Object[]|string} arr array\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isEmpty(obj) {\r\n    return isIterable(obj) && obj.length === 0;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a Date\r\n * @param {*} value \r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isDate(value) {\r\n    return value instanceof Date || (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]');\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the variable is a String\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is a Function\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is an Object\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isObject(value) {\r\n    return !isNullOrUndefined(value) && typeof value === 'object';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isIterable(obj) {\r\n    return !isNullOrUndefined(obj) && typeof obj[Symbol.iterator] === 'function';\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the object is a non-string iterable\r\n * @param {*} obj\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isCollection(obj) {\r\n    return isIterable(obj) && !isString(obj);\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNull(value) { \r\n    return value === null; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether a string is null or made of whitespace.\r\n * @param {string} value string\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrWhitespace(value) {\r\n    return (!value || isString(value) && (value.length === 0 || /^\\s*$/.test(value)));\r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isUndefined(value) { \r\n    return typeof value === 'undefined'; \r\n}\r\n\r\n/**\r\n * Returns a value indicating whether the value is null or undefined\r\n * @param {*} value\r\n * @returns {boolean}\r\n * @memberof STD\r\n */\r\nexport function isNullOrUndefined(value) { \r\n    return isNull(value) || isUndefined(value); \r\n}","import { isNullOrUndefined, isDate } from './std-parse.js';\r\n\r\n\r\n/**\r\n * Compare 2 times\r\n * @param {string} t1 time 1\r\n * @param {string} t2 time 2\r\n * @param {string} [separator=\":\"]\r\n * @returns {number} 1, 0, -1 if t1 > t2, t1 = t2 and t1 < t2 respectively\r\n * @memberof STD\r\n */\r\nexport function compareTime(t1, t2, separator = \":\") {\r\n    if (isNullOrUndefined(t1) || isNullOrUndefined(t2) || !t1.includes(separator) || !t2.includes(separator)) {\r\n        return null;\r\n    }\r\n\r\n    var arr1 = t1.split(separator);\r\n    var arr2 = t2.split(separator);\r\n\r\n    // hour comparison\r\n    if (+arr1[0] > +arr2[0]) {\r\n        return 1;\r\n    } else if (+arr1[0] < +arr2[0]) {\r\n        return -1;\r\n    } else {\r\n        // minute comparison\r\n        if (+arr1[1] > +arr2[1]) {\r\n            return 1;\r\n        } else if (+arr1[1] < +arr2[1]) {\r\n            return -1;\r\n        } else {\r\n            if (arr1.length == arr2.length && arr1.length == 3) {\r\n                // second comparison\r\n                if (+arr1[2] > +arr2[2]) {\r\n                    return 1;\r\n                } else if (+arr1[2] < +arr2[2]) {\r\n                    return -1;\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Resolves a date value\r\n * @param {*} [value] \r\n * @returns {Date}\r\n  * @memberof STD\r\n */\r\nexport function resolveDate(value, useOffset = true) {\r\n    if (isNullOrUndefined(value)) {\r\n        return new Date();\r\n    } else if (isDate(value)) {\r\n        return value;\r\n    }\r\n\r\n    var date = new Date(value);\r\n    var time = date.getTime();\r\n\r\n    if (Number.isNaN(time)) {\r\n        return new Date();\r\n    }\r\n\r\n    if (useOffset) {\r\n        return new Date(time + date.getTimezoneOffset() * 60000);\r\n    }\r\n\r\n    return date;\r\n}\r\n\r\n/**\r\n * Formats a date\r\n * @param {!Date} date \r\n * @param {!string} format \r\n * @returns {string} Formatted date\r\n * @memberof STD\r\n */\r\nexport function formatDate(date, format) {\r\n    var dd = date.getDate();\r\n    var mm = date.getMonth() + 1;   // January = 0\r\n    var yyyy = date.getFullYear().toString();\r\n    var hh = date.getHours();\r\n    var MM = date.getMinutes();\r\n    var ss = date.getSeconds();\r\n\r\n    const twoDigits = (val) => val < 10 ? `0${val}` : val;\r\n\r\n    return format.replace('yyyy', yyyy)\r\n        .replace('yy', yyyy.slice(-2))\r\n        .replace('mm', twoDigits(mm))\r\n        .replace('m', mm)\r\n        .replace('dd', twoDigits(dd))\r\n        .replace('d', dd)\r\n        .replace('hh', twoDigits(hh))\r\n        .replace('h', hh)\r\n        .replace('MM', twoDigits(MM))\r\n        .replace('M', MM)\r\n        .replace('ss', twoDigits(ss))\r\n        .replace('s', ss);\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDate(_date) {\r\n    var date = resolveDate(_date);\r\n\r\n    return formatDate(date, 'yyyy-mm-dd');\r\n}\r\n\r\n/**\r\n * Returns a date and time using the format \"YYYY-mm-dd hh:MM\"\r\n * @param {*} _date \r\n * @returns {string}\r\n * @memberof STD\r\n */\r\nexport function shortDateTime(_date) {\r\n    var date = resolveDate(_date, false);\r\n\r\n    return formatDate(date, 'yyyy-mm-dd hh:MM');\r\n}","import { isObject, isNullOrUndefined } from \"./std-parse.js\";\r\n\r\n\r\n/** @private */\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n/** @private */\r\nconst isPrototypeOf = Object.prototype.isPrototypeOf;\r\n\r\n\r\n/**\r\n * Returns a boolean indicating whether the object has the specified property as its own property (not inherited).\r\n * @param {*} obj target object\r\n * @param {string} key name of the property\r\n * @memberof STD\r\n */\r\nexport const hasOwn = function (obj, key) {\r\n    return hasOwnProperty.call(obj, key);\r\n};\r\n\r\n/**\r\n * Returns a boolean indicating whether the object (child) inherit from another object (parent)\r\n * @param {*} child \r\n * @param {*} parent \r\n * @memberof STD\r\n */\r\nexport const isDerivedOf = function (child, parent) {\r\n    return Object.getPrototypeOf(child) !== parent && isPrototypeOf.call(parent, child);\r\n};\r\n\r\n/**\r\n * Creates a clone of an object\r\n * @param {*} obj Object\r\n * @memberof STD\r\n */\r\nexport function cloneObject(obj) {\r\n    if (isNullOrUndefined(obj) || !isObject(obj)) {\r\n        return obj;\r\n    }\r\n\r\n    var temp = obj.constructor(); // changed\r\n    for (var key in obj) {\r\n        if (hasOwn(obj, key)) {\r\n            obj['isActiveClone'] = null;\r\n            temp[key] = cloneObject(obj[key]);\r\n            delete obj['isActiveClone'];\r\n        }\r\n    }\r\n\r\n    return temp;\r\n}","import { isNullOrWhitespace, isString } from \"./std-parse.js\";\r\nimport { hasOwn } from \"./std-object.js\";\r\n\r\n\r\n/**\r\n * Capitalizes all words in a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Capitalized sequence\r\n * @memberof STD\r\n */\r\nexport function capitalize(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.toLowerCase().replace(/\\b\\w/g, (s) => s.toUpperCase());\r\n}\r\n\r\n/**\r\n * Capitalizes the first letter of a sequence\r\n * @param {string} str Sequence\r\n * @returns {string} Sequence with its first letter capitalized\r\n * @memberof STD\r\n */\r\nexport function capitalizeFirstLetter(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\nconst CaseHandler = {\r\n    'camel': (str) => camelCase(str),\r\n    'pascal': (str) => pascalCase(str),\r\n    'upper': (str) => str.toUpperCase(),\r\n    'lower': (str) => str.toLowerCase(),\r\n};\r\n\r\n/**\r\n * Format a sequence according to a specified case\r\n * @param {!string} str Sequence\r\n * @param {!string} casing Casing (camel, pascal, upper, lower)\r\n * @returns {string} Formatted sequence\r\n * @memberof STD\r\n */\r\nexport function formatCase(str, casing) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    if (!hasOwn(CaseHandler, casing)) {\r\n        return str;\r\n    }\r\n\r\n    return CaseHandler[casing](str);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence except the first one and \r\n * removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} camelCased sequence\r\n * @memberof STD\r\n */\r\nexport function camelCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = pascalCase(str);\r\n\r\n    return ccString.charAt(0).toLowerCase() + ccString.slice(1);\r\n}\r\n\r\n/**\r\n * Capitalizes all words in a sequence and removes spaces or punctuation\r\n * @param {!string} str Sequence\r\n * @returns {string} PascalCased sequence\r\n * @memberof STD\r\n */\r\nexport function pascalCase(str) {\r\n    if (isNullOrWhitespace(str)) {\r\n        return str;\r\n    }\r\n\r\n    var ccString = str.replace(/[_-]+/g, \" \").replace(/\\s+/g, ' ').trim();\r\n\r\n    return capitalize(ccString).replace(/\\s+/g, '');\r\n}\r\n\r\n/**\r\n * Removes all accents from a string\r\n * @param {!string} str A string\r\n * @returns {string} A string without accents\r\n * @memberof STD\r\n */\r\nexport function removeAccents(str) {\r\n    if (String.prototype.normalize) {\r\n        return str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\");\r\n    }\r\n\r\n    return str.replace(/[àâäæ]/gi, 'a')\r\n        .replace(/[ç]/gi, 'c')\r\n        .replace(/[éèê]/gi, 'e')\r\n        .replace(/[îï]/gi, 'i')\r\n        .replace(/[ôœ]/gi, 'o')\r\n        .replace(/[ùûü]/gi, 'u');\r\n}\r\n\r\n/**\r\n * Verifies that a character is a vowel\r\n * @param {string} char String character\r\n */\r\nexport function isVowel(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    return \"aeiou\".includes(char.toLowerCase());\r\n}\r\n\r\n/**\r\n * Verifies that a character is a consonant\r\n * @param {string} char String character\r\n */\r\nexport function isConsonant(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    return \"bcdfghjklmnpqrstvwxyz\".includes(char.toLowerCase());\r\n}\r\n\r\n/**\r\n * Verifies that a character is uppercase\r\n * @param {string} char String character\r\n */\r\nexport function isUpperCase(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    let charCode = char.charCodeAt(0);\r\n\r\n    return charCode >= 65 && charCode <= 90;\r\n}\r\n\r\n/**\r\n * Verifies that a character is lowercase\r\n * @param {string} char String character\r\n */\r\nexport function isLowerCase(char) {\r\n    if (!isString(char)) {\r\n        return false;\r\n    }\r\n\r\n    let charCode = char.charCodeAt(0);\r\n\r\n    return charCode >= 97 && charCode <= 122;\r\n}","import { isFunction } from \"./std-parse.js\";\r\n\r\n\r\n/**\r\n * Verifies that the condition is satisfied for a specified number (range) of value\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @param {number} [min=1] Minimum number of values that must satisfy the condition\r\n * @param {number} [max] Maximum number of values that must satisfy the condition\r\n * @returns {boolean} A value indicating whether the condition is satisfied for the specified range\r\n * @memberof STD\r\n */\r\nexport const assert = function (values, pred, min, max) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    var hitCount = getHitCount(values, pred);\r\n\r\n    if (all([min, max], Number.isInteger)) {\r\n        if (max < min) {\r\n            throw new Error(\"Bad argument: max must be greater than min\");\r\n        }\r\n\r\n        return hitCount >= min && hitCount <= max;\r\n    }\r\n\r\n    if (Number.isInteger(min)) {\r\n        return hitCount >= min;\r\n    }\r\n\r\n    if (Number.isInteger(max)) {\r\n        return hitCount <= max;\r\n    }\r\n\r\n    return hitCount > 0;\r\n};\r\n\r\n/**\r\n * Verifies that at least one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at least one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const some = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/**\r\n * Verifies that all the values satisfy the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether all the values satisfy the condition\r\n * @memberof STD\r\n */\r\nexport const all = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (!pred(...(Array.isArray(value) ? value : [value]))) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n/**\r\n * Verifies that exactly one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether exactly one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const one = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) === 1;\r\n};\r\n\r\n/**\r\n * Verifies that no value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether no value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const no = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) === 0;\r\n};\r\n\r\n/**\r\n * Verifies that at most one value satisfies the condition\r\n * @param {*[]} values Set of values\r\n * @param {Function} pred Condition\r\n * @returns {boolean} A value indicating whether at most one value satisfies the condition\r\n * @memberof STD\r\n */\r\nexport const lone = function (values, pred) {\r\n    if (!(Array.isArray(values) && isFunction(pred))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return getHitCount(values, pred) <= 1;\r\n};\r\n\r\n/**\r\n * Gets the number of values that satisfy the condition\r\n * @param {*[]} values \r\n * @param {Function} pred \r\n * @returns {number}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getHitCount(values, pred) {\r\n    var counter = 0;\r\n\r\n    for (let i = 0; i < values.length; i++) {\r\n        let value = values[i];\r\n\r\n        if (pred(...(Array.isArray(value) ? value : [value]))) {\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    return counter;\r\n}","import { isNullOrWhitespace, isNullOrUndefined } from './std-parse.js';\r\nimport { cloneObject } from './std-object.js';\r\n\r\n\r\n/**\r\n * Append the path to the current path\r\n * @param {string} target \r\n * @param {string} path \r\n * @param {string} [separator=\".\"] \r\n * @memberof STD\r\n */\r\nexport function addPath(target, path, separator = \".\") {\r\n    return isNullOrWhitespace(target) ? path : `${target}${separator}${path}`;\r\n}\r\n\r\n/**\r\n * Returns the directory of the path\r\n * @param {string} path \r\n * @param {string} [separator=\".\"] \r\n * @memberof STD\r\n */\r\nexport function getDir(path, separator = \".\") {\r\n    return path.substring(0, path.lastIndexOf(separator));\r\n}\r\n\r\n/**\r\n * Returns the directory of the path from the target\r\n * @param {string} path \r\n * @memberof STD\r\n */\r\nexport function getDirTarget(path, target) {\r\n    return path.substring(0, path.lastIndexOf(target) - 1);\r\n}\r\n\r\nfunction findByIndex(obj, match, prop) {\r\n    const REGEX_DIGIT = /\\d+/g;\r\n    var index = +match[0].match(REGEX_DIGIT);\r\n    return obj[prop][index];\r\n}\r\n\r\n/**\r\n * Returns an element in an object using its path\r\n * @param {Object} obj\r\n * @param {string} path  \r\n * @param {string} [separator=.]\r\n * @memberof STD\r\n */\r\nexport function findByPath(obj, path, separator = \".\") {\r\n    const REGEX_BRACKET_DIGIT = /\\[\\d+\\]/g;\r\n    const REGEX_BRACKET_WORD = /\\[\\w+\\]/g;\r\n\r\n    var me = cloneObject(obj);\r\n\r\n    const findHandler = function (part, regex, callback) {\r\n        var match = part.match(regex);\r\n        var prop = part.substring(0, part.indexOf('['));\r\n        return callback(me, match, prop);\r\n    };\r\n\r\n    var parts = path.split(separator);\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n        let part = parts[i];\r\n\r\n        if (REGEX_BRACKET_DIGIT.test(part)) {\r\n            me = findHandler(part, REGEX_BRACKET_DIGIT, findByIndex);\r\n        } else {\r\n            me = me[part];\r\n        }\r\n\r\n        if (isNullOrUndefined(me)) {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    return me;\r\n}","/**\r\n * Gets the window's width\r\n * @memberof DOM\r\n */\r\nexport const windowWidth = () => window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n\r\n/**\r\n * Gets the window's height\r\n * @memberof DOM\r\n */\r\nexport const windowHeight = () => window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;","import { isNullOrUndefined, isString, isIterable, hasOwn, pascalCase, isEmpty, all, some, isCollection } from '@std/index.js';\r\nimport { windowWidth, windowHeight } from './dom-stat.js';\r\n\r\n/* istanbul ignore next */\r\nconst isElementNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.ELEMENT_NODE;\r\n\r\n/* istanbul ignore next */\r\nconst isDocumentFragmentNode = (obj) => !isNullOrUndefined(obj) && obj.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\r\n\r\n/**\r\n * Verifies that an object is a *Node*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Node*\r\n * @memberof DOM\r\n */\r\nexport const isNode = (obj) => obj instanceof Node;\r\n\r\n/**\r\n * Verifies that an object is a *NodeList*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *NodeList*\r\n * @memberof DOM\r\n */\r\nexport const isNodeList = (obj) => obj instanceof NodeList;\r\n\r\n/**\r\n * Verifies that an object is an *Element*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *Element*\r\n * @memberof DOM\r\n */\r\nexport const isElement = (obj) => isElementNode(obj) && obj instanceof Element;\r\n\r\n/**\r\n * Verifies that an object is an *HTML Element*\r\n * @param {Element} obj \r\n * @param {string|string[]|string[][]} [kind] \r\n * @returns {boolean} Value indicating whether the object is an *HTMLElement*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLElement = (obj, kind) => {\r\n    if (!(isElementNode(obj) && obj instanceof HTMLElement)) {\r\n        return false;\r\n    }\r\n\r\n    if (isIterable(kind)) {\r\n        return isHTMLElementKind(obj, Array.isArray(kind) ? kind : [kind]);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nconst TagNameMapping = {\r\n    'a': \"Anchor\",\r\n    'br': \"BR\",\r\n    'dl': \"DList\",\r\n    'datalist': \"DataList\",\r\n    'fieldset': \"FieldSet\",\r\n    'frameset': \"FrameSet\",\r\n    'hr': \"HR\",\r\n    'h1': \"Heading\",\r\n    'h2': \"Heading\",\r\n    'h3': \"Heading\",\r\n    'h4': \"Heading\",\r\n    'h5': \"Heading\",\r\n    'h6': \"Heading\",\r\n    'li': \"LI\",\r\n    'ol': \"OList\",\r\n    'optgroup': \"OptGroup\",\r\n    'p': \"Paragraph\",\r\n    'q': \"Quote\",\r\n    'blockquote': \"Quote\",\r\n    'caption': \"TableCaption\",\r\n    'td': \"TableCell\",\r\n    'th': \"TableCell\",\r\n    'col': \"TableCol\",\r\n    'tr': \"TableRow\",\r\n    'tbody': \"TableSection\",\r\n    'thead': \"TableSection\",\r\n    'tfoot': \"TableSection\",\r\n    'textarea': \"TextArea\",\r\n    'ul': \"UList\",\r\n};\r\n\r\n/**\r\n * Verifies the tag of an *HTML Element*\r\n * @param {HTMLElement} element \r\n * @param {string[]|string[][]} kinds\r\n * @returns {boolean}\r\n * @private\r\n */\r\nfunction isHTMLElementKind(element, kinds) {\r\n    const isInstanceOf = (obj) => element instanceof obj;\r\n    const hasTag = (tag) => element.tagName === tag.toUpperCase();\r\n    const isOfType = (type) => Array.isArray(type) ? type.includes(element.type) : element.type === type;\r\n    \r\n    return kinds.some((kind) => {\r\n        if (!isIterable(kind)) {\r\n            return false;\r\n        }\r\n\r\n        var name = kind;\r\n        var type = null;\r\n        \r\n        if (Array.isArray(kind)) {\r\n            [name, type] = kind;\r\n        }\r\n\r\n        name = name.toLowerCase();\r\n        var interfaceName = `HTML${hasOwn(TagNameMapping, name) ? TagNameMapping[name] : pascalCase(name)}Element`;\r\n\r\n        if (!(isInstanceOf(window[interfaceName]) || hasTag(name))) {\r\n            return false;\r\n        }\r\n\r\n        if (isCollection(type) && !isEmpty(type)) {\r\n            return isOfType(type);\r\n        }\r\n\r\n        return true;\r\n    });\r\n}\r\n\r\n/**\r\n * Verifies that an object is an *HTMLCollection*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *HTMLCollection*\r\n * @memberof DOM\r\n */\r\nexport const isHTMLCollection = (obj) => obj instanceof HTMLCollection;\r\n\r\n/**\r\n * Verifies that an object is an *DocumentFragment*\r\n * @param {Element} obj \r\n * @returns {boolean} Value indicating whether the object is an *DocumentFragment*\r\n * @memberof DOM\r\n */\r\nexport const isDocumentFragment = (obj) => isDocumentFragmentNode(obj) && obj instanceof DocumentFragment;\r\n\r\n/**\r\n * Converts an html string to an HTML Element or a list of HTML Elements\r\n * @param {!string} prop \r\n * @param {!string} html \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction _htmlToElement(prop, html) {\r\n    if (!isString(html)) {\r\n        return null;\r\n    }\r\n\r\n    var template = document.createElement('template');\r\n    template.innerHTML = html.trim();\r\n\r\n    return template.content[prop];\r\n}\r\n\r\n/**\r\n * Converts an html string to an HTML Element\r\n * @param {!string} html \r\n * @returns {Node}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElement = _htmlToElement.bind(null, 'firstChild');\r\n\r\n/**\r\n * Converts an html string to a list of HTML Elements\r\n * @param {!string} html \r\n * @returns {NodeList}\r\n * @memberof DOM\r\n */\r\nexport const htmlToElements = _htmlToElement.bind(null, 'childNodes');\r\n\r\n/**\r\n * Verifies that an element is visible\r\n * @param {!HTMLElement} element \r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInViewport(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' is not a valid HTML Element\");\r\n    }\r\n\r\n    const { top, right, bottom, left } = element.getBoundingClientRect();\r\n\r\n    return top >= 0 && left >= 0 && bottom <= windowHeight() && right <= windowWidth();\r\n}\r\n\r\n/**\r\n * Verifies that an element is displayed inside a target element\r\n * @param {!HTMLElement} element \r\n * @param {!HTMLElement} target\r\n * @returns {boolean}\r\n * @memberof DOM\r\n */\r\nexport function isInElement(element, target) {\r\n    if (!all([element, target], isHTMLElement)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' is not a valid HTML Element\");\r\n    }\r\n\r\n    const { top: top1, right: right1, bottom: bottom1, left: left1 } = element.getBoundingClientRect();\r\n    const { top: top2, right: right2, bottom: bottom2, left: left2 } = target.getBoundingClientRect();\r\n\r\n    return all([[top2, top1], [left2, left1], [right1, right2], [bottom1, bottom2]], (inner, outer) => inner <= outer);\r\n}","import { isObject, isNullOrUndefined, isIterable, isNullOrWhitespace, isString } from '@std/index.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n\r\n/**\r\n * Removes additional spaces in class attribute\r\n * @param {string} val class attribute's value\r\n * @returns {string} formatted value\r\n * @private\r\n */\r\nconst formatClass = (val) => val.replace(/\\s+/g, ' ').trim();\r\n\r\n\r\n/**\r\n * Add classes to an element\r\n * @param {HTMLElement} element \r\n * @param {string|string[]} value \r\n * @private\r\n * @memberof DOM\r\n */\r\nfunction addClass(element, value) {\r\n    if (!isIterable(value)) {\r\n        throw new TypeError(\"Bad argument: The passed `value` argument is not a string or array\");\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n        element.classList.add(...value);\r\n    } else {\r\n        let formattedValue = formatClass(value);\r\n\r\n        if (isNullOrWhitespace(element.className)) {\r\n            element.className = formattedValue;\r\n        } else {\r\n            addClass(element, formattedValue.split(' '));\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {string} value \r\n * @private\r\n */\r\nfunction assign(element, key, value) {\r\n    element[key] = value;\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignObject(element, key, value) {\r\n    Object.assign(element[key], value);\r\n}\r\n\r\n/**\r\n * Assigns a value to an attribute\r\n * @param {HTMLElement} element \r\n * @param {string} key \r\n * @param {Object} value \r\n * @private\r\n */\r\nfunction assignAttribute(element, key, value) {\r\n    element.setAttribute(key, value);\r\n}\r\n\r\nconst GLOBAL_ATTRIBUTES = \"accesskey,autocapitalize,class,dataset,editable,draggable,hidden,id,inputmode,lang,style,tabindex,title\";\r\n\r\nconst AttributeHandler = {\r\n    // Global attributes\r\n    accesskey: [assign, 'accessKey'],\r\n    autocapitalize: [assign, 'autocapitalize'],\r\n    class: [addClass],\r\n    dataset: [assignObject, 'dataset'],\r\n    draggable: [assign, 'draggable'],\r\n    editable: [assign, 'contentEditable'],\r\n    hidden: [assign, 'hidden'],\r\n    id: [assign, 'id'],\r\n    inputmode: [assign, 'inputMode'],\r\n    lang: [assign, 'lang'],\r\n    html: [assign, 'innerHTML'],\r\n    style: [assign, 'style'],\r\n    tabindex: [assign, 'tabIndex'],\r\n    text: [assign, 'textContent'],\r\n    title: [assign, 'title'],\r\n    // Anchor attributes\r\n    download: [assign, 'download'],\r\n    ping: [assign, 'ping'],\r\n    target: [assign, 'target'],\r\n    // Area attributes\r\n    coords: [assign, 'coords'],\r\n    shape: [assign, 'shape'],\r\n    // Audio/Video attributes\r\n    autoplay: [assign, 'autoplay'],\r\n    buffered: [assign, 'buffered'],\r\n    controls: [assign, 'controls'],\r\n    loop: [assign, 'loop'],\r\n    muted: [assign, 'muted'],\r\n    playsinline: [assignAttribute, 'playsinline'],\r\n    poster: [assign, 'poster'],\r\n    preload: [assign, 'preload'],\r\n    // Form attributes\r\n    accept: [assign, 'accept'],\r\n    \"accept-charset\": [assign, 'acceptCharset'],\r\n    action: [assign, 'action'],\r\n    autocomplete: [assign, 'autocomplete'],\r\n    autofocus: [assign, 'autofocus'],\r\n    capture: [assign, 'capture'],\r\n    checked: [assign, 'checked'],\r\n    cols: [assign, 'cols'],\r\n    disabled: [assign, 'disabled'],\r\n    dirname: [assign, 'dirName'],\r\n    enctype: [assign, 'enctype'],\r\n    for: [assign, 'htmlFor'],\r\n    form: [assign, 'form'],\r\n    formaction: [assign, 'formAction'],\r\n    formenctype: [assign, 'formEnctype'],\r\n    formmethod: [assign, 'formMethod'],\r\n    formnovalidate: [assign, 'formNoValidate'],\r\n    formtarget: [assign, 'formTarget'],\r\n    high: [assign, 'high'],\r\n    label: [assign, 'label'],\r\n    list: [assign, 'list'],\r\n    low: [assign, 'low'],\r\n    max: [assign, 'max'],\r\n    maxlength: [assign, 'maxLength'],\r\n    method: [assign, 'method'],\r\n    min: [assign, 'min'],\r\n    minlength: [assign, 'minLength'],\r\n    multiple: [assign, 'multiple'],\r\n    novalidate: [assign, 'noValidate'],\r\n    optimum: [assign, 'optimum'],\r\n    pattern: [assign, 'pattern'],\r\n    placeholder: [assign, 'placeholder'],\r\n    readonly: [assign, 'readOnly'],\r\n    required: [assign, 'required'],\r\n    rows: [assign, 'rows'],\r\n    selected: [assign, 'selected'],\r\n    size: [assign, 'size'],\r\n    spellcheck: [assignAttribute, 'spellcheck'],\r\n    step: [assign, 'step'],\r\n    wrap: [assign, 'wrap'],\r\n    // Image attributes\r\n    crossorigin: [assign, 'crossOrigin'],\r\n    decoding: [assign, 'decoding'],\r\n    height: [assign, 'height'],\r\n    ismap: [assign, 'isMap'],\r\n    loading: [assign, 'loading'],\r\n    srcset: [assign, 'srcset'],\r\n    width: [assign, 'width'],\r\n    // Link attributes\r\n    alt: [assign, 'alt'],\r\n    as: [assign, 'as'],\r\n    media: [assign, 'media'],\r\n    rel: [assign, 'rel'],\r\n    src: [assign, 'src'],\r\n    sizes: [assign, 'sizes'],\r\n    // List attributes\r\n    reversed: [assign, 'reversed'],\r\n    start: [assign, 'start'],\r\n    // Meta attributes\r\n    charset: [assignAttribute, 'charset'],\r\n    content: [assign, 'content'],\r\n    \"http-equiv\": [assign, 'httpEquiv'],\r\n    // Object attributes\r\n    data: [assign, 'data'],\r\n    // Quote attributes\r\n    cite: [assign, 'cite'],\r\n    // Table attributes\r\n    abbr: [assign, 'abbr'],\r\n    colspan: [assign, 'colSpan'],\r\n    span: [assign, 'span'],\r\n    rowspan: [assign, 'rowSpan'],\r\n    scope: [assign, 'scope'],\r\n    // Track attributes\r\n    default: [assign, 'default'],\r\n    kind: [assign, 'kind'],\r\n    srclang: [assign, 'srclang'],\r\n    // Mix attributes\r\n    href: [assign, 'href'],\r\n    hreflang: [assign, 'hreflang'],\r\n    datetime: [assign, 'dateTime'],\r\n    name: [assign, 'name'],\r\n    type: [assign, 'type'],\r\n    value: [assign, 'value'],\r\n    usemap: [assign, 'useMap'],\r\n};\r\n\r\n\r\n/**\r\n * Sets the attributes of an element\r\n * @param {!HTMLElement} element element\r\n * @param {Object} attribute attribute\r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport function addAttributes(element, attribute, validAttributes) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument: The given 'element' argument is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isObject(attribute)) {\r\n        return element;\r\n    }\r\n\r\n    const isValid = (key) => GLOBAL_ATTRIBUTES.includes(key) || isNullOrUndefined(validAttributes) || validAttributes.includes(key);\r\n\r\n    for (const key of Object.keys(attribute)) {\r\n        if (isValid(key)) {\r\n            let value = attribute[key];\r\n            let args = AttributeHandler[key].slice(0);\r\n            let fn = args.shift();\r\n\r\n            if (!isNullOrUndefined(value)) {\r\n                fn(element, ...args, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Changes the selected option of a `<select>` element\r\n * @param {!HTMLSelectElement} select\r\n * @param {!string} optValue option value to select\r\n * @returns {boolean} value indicating whether the option was found and selected\r\n * @memberof DOM\r\n */\r\nexport function changeSelectedValue(select, optValue) {\r\n    if (!isHTMLElement(select, \"select\")) {\r\n        throw new TypeError(\"Bad argument: The given 'select' argument is not a valid HTML Select element\");\r\n    }\r\n\r\n    if (!(isString(optValue) || isObject(optValue))) {\r\n        throw new TypeError(\"Bad argument: The given 'optValue' argument is a null or undefined\");\r\n    }\r\n\r\n    /**\r\n     * Object equality\r\n     * @param {HTMLOptionElement} option \r\n     * @param {*} obj \r\n     */\r\n    const objectEq = (option, obj) => option.value === obj.value || option.text === obj.text;\r\n\r\n    /**\r\n     * String equality\r\n     * @param {HTMLOptionElement} option \r\n     * @param {string} obj \r\n     */\r\n    const stringEq = (option, value) => option.value === value;\r\n\r\n    const eqHandler = isString(optValue) ? stringEq : objectEq;\r\n\r\n    const { options, multiple } = select;\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n        let option = options[i];\r\n\r\n        if (eqHandler(option, optValue)) {\r\n            if (!multiple) {\r\n                Array.from(select.selectedOptions).forEach(opt => opt.selected = false);\r\n            }\r\n            option.selected = true;\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}","import { isNullOrUndefined, isObject, valOrDefault, isIterable, isString } from \"@std/index.js\";\r\nimport { isHTMLElement, isNode } from \"./dom-parse.js\";\r\nimport { addAttributes } from \"./element-manip.js\";\r\n\r\n\r\n/**\r\n * Creates an empty element with attributes\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {object} [_attributes] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createEmptyElement(tagName, _validAttributes, _attributes) {\r\n    const element = document.createElement(tagName);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (isObject(_attributes)) {\r\n        addAttributes(element, _attributes, valOrDefault(_validAttributes, \"\"));\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n/**\r\n * Creates an element with attributes and content\r\n * @param {string} tagName \r\n * @param {string} [_validAttributes] \r\n * @param {Function} [contentResolver] \r\n * @param {object} [_attributes] \r\n * @param {Text|HTMLElement|HTMLElement[]} [_content] \r\n * @returns {HTMLElement}\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction createElement(tagName, _validAttributes, _attributes, _content) {\r\n    const element = createEmptyElement(tagName, _validAttributes, _attributes);\r\n\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    if (!isNullOrUndefined(_content)) {\r\n        addContent(element, _content);\r\n    }\r\n\r\n    return element;\r\n}\r\n\r\n\r\n// TODO: createScript\r\n\r\n// TODO: createStyle\r\n\r\n/**\r\n * Creates a document fragment\r\n * @function createDocFragment\r\n * @returns {DocumentFragment}\r\n * @memberof DOM\r\n */\r\nexport function createDocFragment(_children) {\r\n    var fragment = document.createDocumentFragment();\r\n\r\n    if (!isNullOrUndefined(_children)) {\r\n        addContent(fragment, _children);\r\n    }\r\n\r\n    return fragment;\r\n}\r\n\r\n/**\r\n * Creates a text node\r\n * @function createTextNode\r\n * @param {string} text\r\n * @returns {Text}\r\n * @memberof DOM\r\n */\r\nexport const createTextNode = (text) => document.createTextNode(text);\r\n\r\n\r\n/******************************************************************************\r\n * Metadata Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates an `<base>` element with some attributes\r\n * @function createBase\r\n * @param {object} _attribute \r\n * @returns {HTMLBaseElement}\r\n * @memberof DOM\r\n */\r\nexport const createBase = createEmptyElement.bind(null, \"base\", \"href,target\");\r\n\r\n/**\r\n * Creates a `<link>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLLinkElement}\r\n * @memberof DOM\r\n */\r\nexport const createLink = createEmptyElement.bind(null, \"link\", \"as,crossorigin,disabled,href,hreflang,media,rel,sizes,type\");\r\n\r\n/**\r\n * Creates a `<meta>` element with some attributes\r\n * @function createLink\r\n * @param {object} _attribute Global attributes\r\n * @returns {HTMLMetaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeta = createEmptyElement.bind(null, \"meta\", \"charset,content,http-equiv,name\");\r\n\r\n/**\r\n * Creates a `<title>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTitleElement}\r\n * @memberof DOM\r\n */\r\nexport const createTitle = createElement.bind(null, \"title\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<template>` element with some attributes\r\n * @function createTemplate\r\n * @param {object} _attribute Global attributes\r\n * @param {Text|HTMLElement|HTMLElement[]} _children Content\r\n * @returns {HTMLTemplateElement}\r\n * @memberof DOM\r\n */\r\nexport const createTemplate = createElement.bind(null, \"template\", \"html,text\");\r\n\r\n\r\n/******************************************************************************\r\n * Sectionning Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<header>` element with some attributes\r\n * @function createHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createHeader = createElement.bind(null, \"header\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<footer>` element with some attributes\r\n * @function createFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFooter = createElement.bind(null, \"footer\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<main>` element with some attributes\r\n * @function createMain\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMain = createElement.bind(null, \"main\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<article>` element with some attributes\r\n * @function createArticle\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createArticle = createElement.bind(null, \"article\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<section>` element with some attributes\r\n * @function createSection\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSection = createElement.bind(null, \"section\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<nav>` element with some attributes\r\n * @function createNav\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createNav = createElement.bind(null, \"nav\", \"html,text\");\r\n\r\n/**\r\n * Creates an `<aside>` element with some attributes\r\n * @function createAside\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAside = createElement.bind(null, \"aside\", \"html,text\");\r\n\r\n\r\n/******************************************************************************\r\n * Heading Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<h1>` element with some attributes\r\n * @function createH1\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH1 = createElement.bind(null, \"h1\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h2>` element with some attributes\r\n * @function createH2\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH2 = createElement.bind(null, \"h2\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h3>` element with some attributes\r\n * @function createH3\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH3 = createElement.bind(null, \"h3\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h4>` element with some attributes\r\n * @function createH4\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH4 = createElement.bind(null, \"h4\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h5>` element with some attributes\r\n * @function createH5\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH5 = createElement.bind(null, \"h5\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<h6>` element with some attributes\r\n * @function createH6\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLHeadingElement}\r\n * @memberof DOM\r\n */\r\nexport const createH6 = createElement.bind(null, \"h6\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<div>` element with some attributes\r\n * @function createDiv\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDivElement}\r\n * @memberof DOM\r\n */\r\nexport const createDiv = createElement.bind(null, \"div\", \"html,text\");\r\n\r\n\r\n\r\n/**\r\n * Creates a `<br>` element \\\r\n * Line break (carriage-return)\r\n * @function createLineBreak\r\n * @returns {HTMLBRElement}\r\n * @memberof DOM\r\n */\r\nexport const createLineBreak = createEmptyElement.bind(null, \"br\", \"\");\r\n\r\n/**\r\n * Creates a `<hr>` element \\\r\n * Thematic break\r\n * @function createThematicBreak\r\n * @returns {HTMLHRElement}\r\n * @memberof DOM\r\n */\r\nexport const createThematicBreak = createEmptyElement.bind(null, \"hr\", \"\");\r\n\r\n/**\r\n * Creates a `<p>` element with some attributes\r\n * @function createParagraph\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLParagraphElement}\r\n * @memberof DOM\r\n */\r\nexport const createParagraph = createElement.bind(null, \"p\", \"html,text\");\r\n\r\n\r\n/**\r\n * Creates a `<blockquote>` element with some attributes\r\n * @function createBlockQuotation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createBlockQuotation = createElement.bind(null, \"blockquote\", \"cite,html,text\");\r\n\r\n/**\r\n * Creates a `<ul>` element with some attributes\r\n * @function createUnorderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLUListElement}\r\n * @memberof DOM\r\n */\r\nexport const createUnorderedList = createElement.bind(null, \"ul\", \"html\");\r\n\r\n/**\r\n * Creates a `<ol>` element with some attributes\r\n * @function createOrderedList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOListElement}\r\n * @memberof DOM\r\n */\r\nexport const createOrderedList = createElement.bind(null, \"ol\", \"html,reversed,start,type\");\r\n\r\n/**\r\n * Creates a `<li>` element with some attributes\r\n * @function createListItem\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLIElement}\r\n * @memberof DOM\r\n */\r\nexport const createListItem = createElement.bind(null, \"li\", \"html,text,value\");\r\n\r\n\r\n/**\r\n * Creates a `<dl>` element with some attributes\r\n * @function createDescriptionList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLDListElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionList = createElement.bind(null, \"dl\", \"html\");\r\n\r\n/**\r\n * Creates a `<dt>` element with some attributes\r\n * @function createDescriptionTerm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionTerm = createElement.bind(null, \"dt\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<dd>` element with some attributes\r\n * @function createDescriptionDetails\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createDescriptionDetails = createElement.bind(null, \"dd\", \"html,text\");\r\n\r\n/******************************************************************************\r\n * Inline Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates an `<a>` element with some attributes\r\n * @function createAnchor\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLAnchorElement}\r\n * @memberof DOM\r\n */\r\nexport const createAnchor = createElement.bind(null, \"a\", \"download,href,hreflang,html,ping,rel,target,text,type\");\r\n\r\n/**\r\n * Creates an `<area>` element with some attributes\r\n * @function createArea\r\n * @param {object} _attribute \r\n * @returns {HTMLAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createArea = createEmptyElement.bind(null, \"area\", \"alt,coords,download,href,hreflang,media,ping,rel,shape,target\");\r\n\r\n\r\n/******************************************************************************\r\n * Embedded Element\r\n *****************************************************************************/\r\n\r\n/**\r\n * Creates a `<audio>` element with some attributes\r\n * @function createAudio\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children\r\n * @returns {HTMLAudioElement}\r\n * @memberof DOM\r\n */\r\nexport const createAudio = createElement.bind(null, \"audio\", \"autoplay,controls,crossorigin,html,loop,muted,preload,src,text\");\r\n\r\n/**\r\n * Creates a `<img>` element with some attributes\r\n * @function createImage\r\n * @param {object} _attribute \r\n * @returns {HTMLImageElement}\r\n * @memberof DOM\r\n */\r\nexport const createImage = createEmptyElement.bind(null, \"img\", \"alt,crossorigin,decoding,height,ismap,loading,sizes,src,srcset,usemap,width\");\r\n\r\n/**\r\n * Creates a `<embed>` element with some attributes\r\n * @function createEmbed\r\n * @param {object} _attribute \r\n * @returns {HTMLEmbedElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmbed = createEmptyElement.bind(null, \"embed\", \"height,src,type,width\");\r\n\r\n/**\r\n * Creates a `<figure>` element with some attributes\r\n * @function createFigure\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigure = createElement.bind(null, \"figure\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<figcaption>` element with some attributes\r\n * @function createFigureCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createFigureCaption = createElement.bind(null, \"figcaption\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<object>` element with some attributes\r\n * @function createObject\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLObjectElement}\r\n * @memberof DOM\r\n */\r\nexport const createObject = createElement.bind(null, \"object\", \"data,height,html,name,text,type,usemap,width\");\r\n\r\n/**\r\n * Creates a `<picture>` element with some attributes\r\n * @function createPicture\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLPictureElement}\r\n * @memberof DOM\r\n */\r\nexport const createPicture = createElement.bind(null, \"picture\", \"html\");\r\n\r\n/**\r\n * Creates a `<source>` element with some attributes\r\n * @function createSource\r\n * @param {object} _attribute\r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSourceElement}\r\n * @memberof DOM\r\n */\r\nexport const createSource = createEmptyElement.bind(null, \"source\", \"media,sizes,src,srcset,type\");\r\n\r\n/**\r\n * Creates a `<track>` element with some attributes\r\n * @function createTrack\r\n * @param {object} _attribute \r\n * @returns {HTMLTrackElement}\r\n * @memberof DOM\r\n */\r\nexport const createTrack = createEmptyElement.bind(null, \"track\", \"default,kind,label,src,srclang\");\r\n\r\n/**\r\n * Creates a `<video>` element with some attributes\r\n * @function createVideo\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLVideoElement}\r\n * @memberof DOM\r\n */\r\nexport const createVideo = createElement.bind(null, \"video\", \"autoplay,controls,crossorigin,height,html,loop,muted,playsinline,poster,preload,src,text,width\");\r\n\r\n\r\n/**\r\n * Creates a `<span>` element with some attributes\r\n * @function createSpan\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSpanElement}\r\n * @memberof DOM\r\n */\r\nexport const createSpan = createElement.bind(null, \"span\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<strong>` element with some attributes\r\n * @function createStrong\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createStrong = createElement.bind(null, \"strong\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<em>` element with some attributes\r\n * @function createEmphasis\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createEmphasis = createElement.bind(null, \"em\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<mark>` element with some attributes\r\n * @function createMark\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createMark = createElement.bind(null, \"mark\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<samp>` element with some attributes\r\n * @function createSample\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSample = createElement.bind(null, \"samp\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<sub>` element with some attributes\r\n * @function createSubscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSubscript = createElement.bind(null, \"sub\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<sup>` element with some attributes\r\n * @function createSuperscript\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createSuperscript = createElement.bind(null, \"sup\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<del>` element with some attributes\r\n * @function createDeletedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createDeletedPart = createElement.bind(null, \"del\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<ins>` element with some attributes\r\n * @function createInsertedPart\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLModElement}\r\n * @memberof DOM\r\n */\r\nexport const createInsertedPart = createElement.bind(null, \"ins\", \"cite,datetime\");\r\n\r\n/**\r\n * Creates a `<q>` element with some attributes\r\n * @function createQuote\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLQuoteElement}\r\n * @memberof DOM\r\n */\r\nexport const createQuote = createElement.bind(null, \"q\", \"cite,html,text\");\r\n\r\n/**\r\n * Creates a `<abbr>` element with some attributes\r\n * @function createAbbreviation\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createAbbreviation = createElement.bind(null, \"abbr\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<b>` element with some attributes\r\n * @function createB\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createB = createElement.bind(null, \"b\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<i>` element with some attributes\r\n * @function createI\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createI = createElement.bind(null, \"i\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<s>` element with some attributes\r\n * @function createS\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createS = createElement.bind(null, \"s\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<u>` element with some attributes\r\n * @function createU\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createU = createElement.bind(null, \"u\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<cite>` element with some attributes\r\n * @function createCite\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCite = createElement.bind(null, \"cite\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<time>` element with optionally some attributes\r\n * @function createTime\r\n * @param {object} _attribute \r\n * @returns {HTMLTimeElement}\r\n * @memberof DOM\r\n */\r\nexport const createTime = createElement.bind(null, \"time\", \"datetime,html,text\");\r\n\r\n/**\r\n * Creates a `<code>` element with some attributes\r\n * @function createCode\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLElement}\r\n * @memberof DOM\r\n */\r\nexport const createCode = createElement.bind(null, \"code\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<form>` element with some attributes\r\n * @function createForm\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFormElement}\r\n * @memberof DOM\r\n */\r\nexport const createForm = createElement.bind(null, \"form\", \"accept-charset,action,autocomplete,enctype,html,method,name,novalidate,rel,target,text\");\r\n\r\nconst inputTypes = [\"button\", \"checkbox\", \"color\", \"date\", \"datetime-local\", \"email\", \"file\",\r\n    \"hidden\", \"image\", \"month\", \"number\", \"password\", \"radio\", \"range\", \"reset\",\r\n    \"search\", \"submit\", \"tel\", \"text\", \"time\", \"url\", \"week\"];\r\n\r\n/**\r\n * Creates an `<input>` element with some attributes\r\n * @function createInput\r\n * @param {object} _attribute \r\n * @returns {HTMLInputElement}\r\n * @memberof DOM\r\n */\r\nexport const createInput = createEmptyElement.bind(null, \"input\", \"accept,alt,autocomplete,autofocus,capture,checked,dirname,disabled,height,max,maxlength,minlength,min,multiple,name,pattern,placeholder,readonly,required,size,src,step,type,value,width\");\r\n\r\n/**\r\n * Creates a `<textarea>` element with some attributes\r\n * @function createTextArea\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createTextArea = createElement.bind(null, \"textarea\", \"autocomplete,autofocus,cols,disabled,html,maxlength,minlength,name,placeholder,readonly,required,rows,spellcheck,text,value,wrap\");\r\n\r\n/**\r\n * Creates a `<label>` element with some attributes\r\n * @function createLabel\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLabel = createElement.bind(null, \"label\", \"for,html,text\");\r\n\r\n/**\r\n * Creates a `<select>` element with some attributes\r\n * @function createSelect\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLSelectElement}\r\n * @memberof DOM\r\n */\r\nexport const createSelect = createElement.bind(null, 'select', \"autocomplete,autofocus,disabled,html,multiple,name,required,size\");\r\n\r\n/**\r\n * Creates a `<option>` element with some attributes\r\n * @function createOption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createOption = createElement.bind(null, \"option\", \"disabled,html,label,selected,text,value\");\r\n\r\n/**\r\n * Creates a `<optgroup>` element with some attributes\r\n * @function createOptionGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLOptGroupElement}\r\n * @memberof DOM\r\n */\r\nexport const createOptionGroup = createElement.bind(null, \"optgroup\", \"disabled,html,label\");\r\n\r\n/**\r\n * Creates a `<fieldset>` element with some attributes\r\n * @function createFieldset\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLFieldSetElement}\r\n * @memberof DOM\r\n */\r\nexport const createFieldset = createElement.bind(null, \"fieldset\", \"disabled,html,name,text\");\r\n\r\n/**\r\n * Creates a `<legend>` element with some attributes\r\n * @function createLegend\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLLabelElement}\r\n * @memberof DOM\r\n */\r\nexport const createLegend = createElement.bind(null, \"legend\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<datalist>` element with some attributes\r\n * @function createDataList\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createDataList = createElement.bind(null, \"datalist\", \"html\");\r\n\r\n/**\r\n * Creates a `<meter>` element with some attributes\r\n * @function createMeter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createMeter = createElement.bind(null, \"meter\", \"high,html,low,max,min,optimum,text,value\");\r\n\r\n/**\r\n * Creates a `<progress>` element with some attributes\r\n * @function createProgress\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createProgress = createElement.bind(null, \"progress\", \"html,max,text,value\");\r\n\r\n/**\r\n * Creates a `<output>` element with optionally some attributes and children elements\r\n * @function createOutput\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTextAreaElement}\r\n * @memberof DOM\r\n */\r\nexport const createOutput = createElement.bind(null, \"output\", \"html,name,text,value\");\r\n\r\nconst buttonTypes = [\"button\", \"submit\", \"reset\"];\r\n\r\n/**\r\n * Creates a `<button>` element with optionally some attributes and children elements\r\n * @function createButton\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLButtonElement}\r\n * @memberof DOM\r\n */\r\nexport const createButton = createElement.bind(null, \"button\", \"autofocus,disabled,formaction,formenctype,formmethod,formnovalidate,formtarget,html,name,text,type,value\");\r\n\r\n/**\r\n * Creates a `<table>` element with some attributes\r\n * @function createTable\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableElement}\r\n * @memberof DOM\r\n */\r\nexport const createTable = createElement.bind(null, \"table\", \"html\");\r\n\r\n/**\r\n * Creates a `<caption>` element with some attributes\r\n * @function createCaption\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCaptionElement}\r\n * @memberof DOM\r\n */\r\nexport const createCaption = createElement.bind(null, \"caption\", \"html,text\");\r\n\r\n/**\r\n * Creates a `<thead>` element with some attributes\r\n * @function createTableHeader\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeader = createElement.bind(null, \"thead\", \"html\");\r\n\r\n/**\r\n * Creates a `<tbody>` element with some attributes\r\n * @function createTableBody\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableBody = createElement.bind(null, \"tbody\", \"html\");\r\n\r\n/**\r\n * Creates a `<tfoot>` element with some attributes\r\n * @function createTableFooter\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableSectionElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableFooter = createElement.bind(null, \"tfoot\", \"html\");\r\n\r\n/**\r\n * Creates a `<col>` element with some attributes\r\n * @function createTableColumn\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumn = createEmptyElement.bind(null, \"col\", \"span\");\r\n\r\n/**\r\n * Creates a `<colgroup>` element with some attributes\r\n * @function createTableColumnGroup\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableColElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableColumnGroup = createElement.bind(null, \"colgroup\", \"html,span\");\r\n\r\n/**\r\n * Creates a `<tr>` element with some attributes\r\n * @function createTableRow\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableRowElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableRow = createElement.bind(null, \"tr\", \"html\");\r\n\r\n/**\r\n * Creates a `<th>` element with some attributes\r\n * @function createTableHeaderCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children \r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableHeaderCell = createElement.bind(null, \"th\", \"abbr,colspan,html,rowspan,scope,text\");\r\n\r\n/**\r\n * Creates a `<td>` element with some attributes\r\n * @function createTableCell\r\n * @param {object} _attribute \r\n * @param {Text|HTMLElement|HTMLElement[]} _children\r\n * @returns {HTMLTableCellElement}\r\n * @memberof DOM\r\n */\r\nexport const createTableCell = createElement.bind(null, \"td\", \"colspan,html,rowspan,text\");\r\n\r\n/**\r\n * Appends the children to the element\r\n * @param {Node} element element\r\n * @param {HTMLCollection} content children elements\r\n * @private\r\n * @memberof DOM\r\n */\r\n/* istanbul ignore next */\r\nfunction addContent(element, content) {\r\n    if (!(isNode(content) || isIterable(content))) {\r\n        return element;\r\n    }\r\n\r\n    if (isNode(content) || isString(content)) {\r\n        element.append(content);\r\n    } else {\r\n        element.append(...content);\r\n    }\r\n\r\n    return element;\r\n}","﻿import { isFunction, isNullOrUndefined, valOrDefault, isNullOrWhitespace } from '@std/index.js';\r\nimport { isElement, isHTMLElement, isDocumentFragment, isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Checks whether the selector represents a `class`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isClassSelector = (selector) => /^\\.[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Checks whether the selector represents an `id`\r\n * @returns {boolean}\r\n * @private\r\n */\r\nconst isIdSelector = (selector) => /^#[a-zA-Z0-9_-]+$/.test(selector);\r\n\r\n/**\r\n * Returns the first element within the specified container that matches the \r\n * specified selector, group or selectors.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLElement|null} The first element matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getElement(selector, _container) {\r\n    const container = isNode(_container) ? _container : document;\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelector(selector);\r\n    }\r\n\r\n    if (isIdSelector(selector)) {\r\n        return document.getElementById(selector.substring(1));\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1))[0];\r\n    }\r\n\r\n    return container.querySelector(selector);\r\n}\r\n\r\n/**\r\n * Returns all elements that match the selector query.\r\n * @param {!string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement|DocumentFragment} [_container] Container queried\r\n * @returns {HTMLCollection|NodeList} A live or *static* (not live) collection of the `container`'s children Element that match the `selector`.\r\n * @memberof DOM\r\n */\r\nexport function getElements(selector, _container) {\r\n    const container = isNode(_container) ? _container : document;\r\n\r\n    if (isNullOrWhitespace(selector)) {\r\n        return null;\r\n    }\r\n\r\n    if (isDocumentFragment(container)) {\r\n        return container.querySelectorAll(selector);\r\n    }\r\n\r\n    if (isClassSelector(selector)) {\r\n        return container.getElementsByClassName(selector.substring(1));\r\n    }\r\n\r\n    return container.querySelectorAll(selector);\r\n}\r\n\r\n/**\r\n * Returns the first Template within the specified container that matches the specified selector, group or selectors.\r\n * @param {string} selector A DOMString containing one or more selectors to match\r\n * @param {HTMLElement} [_container] Container queried\r\n * @returns {HTMLTemplateElement|null} The first Template matches that matches the specified set of CSS selectors.\r\n * @memberof DOM\r\n */\r\nexport function getTemplate(selector, _container) {\r\n    return 'content' in document.createElement('template') ? getElement(selector, _container) : null;\r\n}\r\n\r\n/**\r\n * Returns a duplicate of the template.\r\n * @param {HTMLTemplateElement} template \r\n * @param {boolean} deep used to decide whether the children of the template should also be clone\r\n * @returns {DocumentFragment} The template's clone.\r\n * @memberof DOM\r\n */\r\nexport function cloneTemplate(template, deep) {\r\n    return template ? document.importNode(template.content, valOrDefault(deep, true)) : template;\r\n}\r\n\r\n/**\r\n * Gets the previous or next element of the specified element\r\n * @param {string} dir sibling direction\r\n * @param {HTMLElement} element element\r\n * @returns {(Element|null)} Element or null\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction getElementSibling(dir, element, pred) {\r\n    if (!isHTMLElement(element)) {\r\n        return null;\r\n    }\r\n\r\n    var sibling = element[dir];\r\n\r\n    if (isFunction(pred)) {\r\n        while (isElement(sibling) && !pred(sibling)) {\r\n            sibling = sibling[dir];\r\n        }\r\n    }\r\n\r\n    return sibling;\r\n}\r\n\r\n/**\r\n * Gets the previous element of the specified one in its parent's children list\r\n * @function getPreviousElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the first one in the list\r\n * @memberof DOM\r\n */\r\nexport const getPreviousElementSibling = getElementSibling.bind(null, \"previousElementSibling\");\r\n\r\n/**\r\n * Gets the element following the specified one in its parent's children list\r\n * @function getNextElementSibling\r\n * @param {HTMLElement} el element\r\n * @param {*} pred Search end condition\r\n * @returns {(Element|null)} Element or null if the specified element is the last one in the list\r\n * @memberof DOM\r\n */\r\nexport const getNextElementSibling = getElementSibling.bind(null, \"nextElementSibling\");\r\n\r\n/**\r\n * Finds an ancestor of an element\r\n * @param {!Element} target \r\n * @param {!Function} pred Decides whether the target is found\r\n * @param {number} [_max] Maximum number of iterations\r\n * @returns {Element|null}\r\n * @memberof DOM\r\n */\r\nexport function findAncestor(target, pred, _max) {\r\n    if (!isElement(target)) {\r\n        throw new TypeError(\"Bad argument: The given target parameter is not a valid HTML Element\");\r\n    }\r\n\r\n    if (!isFunction(pred)) {\r\n        throw new TypeError(\"Bad argument: The given pred parameter is not a valid Function\");\r\n    }\r\n\r\n    var parent = target.parentElement;\r\n\r\n    if (_max > 0) {\r\n        return findAncestorIter(parent, pred, _max - 1);\r\n    }\r\n\r\n    return findAncestorInf(parent, pred);\r\n}\r\n\r\n/**\r\n * Look an ancestor of an element using a callback\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorInf(target, pred) {\r\n    if (isNullOrUndefined(target)) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorInf(target.parentElement, pred);\r\n}\r\n\r\n/**\r\n * Look for an ancestor of an element using a callback with a maximum number of iteration\r\n * @param {Element} target \r\n * @param {Function} pred Decides whether the target is found\r\n * @param {number} max Maximum number of iterations\r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction findAncestorIter(target, pred, max) {\r\n    if (isNullOrUndefined(target) || max === 0) {\r\n        return null;\r\n    }\r\n\r\n    if (pred(target)) {\r\n        return target;\r\n    }\r\n\r\n    return findAncestorIter(target.parentElement, pred, max - 1);\r\n}","import { isFunction } from '@std/index.js';\r\nimport { isNode } from './dom-parse.js';\r\n\r\n/**\r\n * Removes all children of a node from the DOM or \r\n * those that satisfy the predicate function if given\r\n * @param {!Node} node \r\n * @param {Function} [_callback] Decides whether the node should be removed\r\n * @memberof DOM\r\n */\r\nexport function removeChildren(node, _callback) {\r\n    if (!isNode(node)) {\r\n        throw new TypeError(\"Bad argument: The given `node` is not a valid Node\");\r\n    }\r\n\r\n    if (isFunction(_callback)) {\r\n        Array.from(node.childNodes).forEach(n => {\r\n            if (_callback(n)) {\r\n                node.removeChild(n);\r\n            }\r\n        });\r\n\r\n        return node;\r\n    }\r\n\r\n    return removeAllChildren(node);\r\n\r\n}\r\n\r\n/**\r\n * Removes all children of a node from the DOM\r\n * @param {!Node} node \r\n * @private\r\n */\r\n/* istanbul ignore next */\r\nfunction removeAllChildren(node) {\r\n    while (node.hasChildNodes()) {\r\n        node.removeChild(node.lastChild);\r\n    }\r\n\r\n    return node;\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\nimport { isNullOrWhitespace, isEmpty } from '@std/index.js';\r\n\r\n\r\n/**\r\n * Update class related to the action *move label down*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveDown = (label) => label.classList.add('down');\r\n\r\n/**\r\n * Update class related to the action *move label up*\r\n * @param {HTMLElement} label \r\n */\r\nconst moveUp = (label) => label.classList.remove('down');\r\n\r\n/**\r\n * Update class related to the action *add focus to element*\r\n * @param {HTMLElement} element \r\n */\r\nconst addFocus = (element) => element.classList.add('focused');\r\n\r\n/**\r\n * Update class related to the action *remove focus from element*\r\n * @param {HTMLElement} element \r\n */\r\nconst removeFocus = (element) => element.classList.remove('focused');\r\n\r\n/**\r\n * Activate floating label in given scope\r\n * @param {HTMLElement} form \r\n */\r\nexport function floatingLabel(form) {\r\n    const labels = getElements('.form-label', form);\r\n\r\n    for (let i = 0; i < labels.length; i++) {\r\n        let label = labels[i];\r\n        if (label.dataset['type'] == 'placeholder' && !isNullOrWhitespace(label.htmlFor)) {\r\n            let input = getElement(`#${label.htmlFor}`);\r\n\r\n            if (isHTMLElement(input)) {\r\n                if (isNullOrWhitespace(input.placeholder)) {\r\n                    bindEvents(input, label);\r\n                    if (isEmpty(input.value)) {\r\n                        moveDown(label);\r\n                    }\r\n                } else {\r\n                    console.warn(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Input \"${label.htmlFor}\" contains a placeholder`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n                }\r\n            } else {\r\n                console.error(`%c@zenkai%c #FloatingLabel>%cfloatingLabel:%c Missing input for label \"${label.htmlFor}\"`, \"text-decoration: underline\", \"\", \"font-weight: bold;\", \"font-weight: normal;\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLLabelElement} label \r\n     */\r\n    function bindEvents(input, label) {\r\n        if (isNullOrWhitespace(input.placeholder)) {\r\n            input.addEventListener('focus', function (e) {\r\n                input.placeholder = \"\";\r\n                moveUp(label);\r\n                addFocus(label.parentElement);\r\n            });\r\n\r\n            input.addEventListener('blur', function (e) {\r\n                if (isEmpty(this.value)) {\r\n                    moveDown(label);\r\n                }\r\n                removeFocus(label.parentElement);\r\n            });\r\n            \r\n            input.addEventListener('input', function (e) {\r\n                // check if input does not have focus\r\n                if (document.activeElement != input) {\r\n                    if (isEmpty(this.value)) {\r\n                        moveDown(label);\r\n                    } else {\r\n                        moveUp(label);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return labels;\r\n}","import { valOrDefault, isString, isNullOrUndefined, isNullOrWhitespace } from \"@std/index.js\";\r\nimport { isHTMLElement, getElements, getElement } from \"@dom/index.js\";\r\n\r\n\r\nconst TYPE = 'type';\r\nconst VALUE = 'value';\r\nconst STATE = 'state';\r\nconst CHECKED = 'checked';\r\nconst UNCHECKED = 'unchecked';\r\n\r\n/**\r\n * Gets type attribute\r\n * @param {HTMLElement} element \r\n * @returns {string}\r\n */\r\nexport const getType = (element) => element.dataset[TYPE];\r\n\r\n/**\r\n * Sets type attribute\r\n * @param {HTMLElement} element \r\n * @param {string} value \r\n * @returns {string}\r\n */\r\nexport const setType = (element, value) => element.dataset[TYPE] = value;\r\n\r\n/**\r\n * Gets value attribute\r\n * @param {HTMLElement} element \r\n * @returns {string}\r\n */\r\nexport const getValue = (element) => element.dataset[VALUE];\r\n\r\n/**\r\n * Sets value attribute\r\n * @param {HTMLElement} element \r\n * @param {string} value \r\n * @returns {string}\r\n */\r\nexport const setValue = (element, value) => element.dataset[VALUE] = value;\r\n\r\n/**\r\n * Gets state attribute\r\n * @param {HTMLElement} element \r\n * @returns {string}\r\n */\r\nexport const getState = (element) => element.dataset[STATE];\r\n\r\n/**\r\n * Sets state attribute\r\n * @param {HTMLElement} element \r\n * @param {string} value \r\n * @returns {string}\r\n */\r\nexport const setState = (element, value) => element.dataset[STATE] = value;\r\n\r\nexport const check = (element, value) => setState(element, valOrDefault(value, CHECKED));\r\n\r\nexport const uncheck = (element, value) => setState(element, valOrDefault(value, UNCHECKED));\r\n\r\n/**\r\n * Resolves the container\r\n * @param {HTMLElement|string} container \r\n * @returns {HTMLElement}\r\n */\r\nexport function resolveContainer(container) {\r\n    if (isHTMLElement(container)) {\r\n        return container;\r\n    } else if (isString(container) && !isNullOrWhitespace(container)) {\r\n        return getElement(container);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} selector \r\n * @param {HTMLElement|string} [_container] \r\n * @returns {HTMLElement[]}\r\n */\r\nexport function getComponents(selector, _container) {\r\n    if (isNullOrUndefined(selector)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    const container = resolveContainer(_container);\r\n\r\n    if (!isHTMLElement(container)) {\r\n        return null;\r\n    }\r\n\r\n    return getElements(selector, container);\r\n}\r\n\r\n/**\r\n * \r\n * @param {string} type \r\n * @param {HTMLElement} container \r\n * @returns {HTMLInputElement}\r\n */\r\nexport function getInput(type, container) {\r\n    if (isHTMLElement(container, 'label') && !isNullOrWhitespace(container.htmlFor)) {\r\n        return getElement(`#${container.htmlFor}`);\r\n    }\r\n\r\n    return getElement(`input[type='${valOrDefault(type, 'text')}']`, container);\r\n}","import { hasOwn, isFunction, isNullOrUndefined, isNull, valOrDefault } from '@std/index.js';\r\nimport { findAncestor, getElements, isHTMLElement, removeChildren } from '@dom/index.js';\r\nimport { check, uncheck, getState, getValue } from '../utils.js';\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n/**\r\n * Gets the item element\r\n * @param {HTMLElement} element \r\n * @this {HTMLElement}\r\n */\r\nfunction getItem(element) {\r\n    const isValid = (el) => hasOwn(el.dataset, 'selector');\r\n\r\n    if (isValid(element)) {\r\n        return element;\r\n    }\r\n\r\n    return findAncestor(element, isValid, 5);\r\n}\r\n\r\nconst BaseSelectorItem = {\r\n    /** @type {number} */\r\n    index: null,\r\n\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        this.setChecked(this.isChecked());\r\n\r\n        return this;\r\n    },\r\n\r\n    /** @returns {string} */\r\n    get value() { return getValue(this.container); },\r\n    /** @returns {boolean} */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n    /** @returns {boolean} */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n            this.container.classList.add(\"selector-item--selected\");\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n            this.container.classList.remove(\"selector-item--selected\");\r\n        }\r\n\r\n        return true;\r\n    },\r\n    setIndex(index) {\r\n        this.index = index;\r\n        this.container.dataset.selectorIndex = index;\r\n    },\r\n    destroy() {\r\n        removeChildren(this.container);\r\n        this.container.remove();\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const BaseSelector = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {BaseSelectorItem[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {BaseSelectorItem} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.selectedItem.value; },\r\n\r\n    init() {\r\n        const itemContainers = getElements('[data-selector]', this.container);\r\n\r\n        if (isNullOrUndefined(itemContainers)) {\r\n            return;\r\n        }\r\n\r\n        this.items = [];\r\n        this.defaultValue = getValue(this.container);\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < itemContainers.length; i++) {\r\n            const item = this.createItem(itemContainers[i]);\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n\r\n            if (item.value === this.defaultValue) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Creates a selector item\r\n     * @param {HTMLElement} container \r\n     */\r\n    createItem(container) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A selector requires a container\");\r\n        }\r\n\r\n        container.classList.add(\"selector-item\");\r\n\r\n        const item = Object.create(BaseSelectorItem, {\r\n            container: { value: container },\r\n            selector: { value: this },\r\n        }).init();\r\n\r\n        this.addItem(item);\r\n\r\n        return item;\r\n    },\r\n    /**\r\n     * Adds a selector item\r\n     * @param {BaseSelectorItem} item \r\n     * @param {*} _index \r\n     */\r\n    addItem(item, _index) {\r\n        this.items.push(item);\r\n\r\n        this.refresh();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * Gets a selector item\r\n     * @param {number} index \r\n     * @returns {BaseSelectorItem}\r\n     */\r\n    getItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return null;\r\n        }\r\n\r\n        return this.items.find((item) => item.index === index);\r\n    },\r\n    /**\r\n     * Removes a selector item\r\n     * @param {number} index \r\n     */\r\n    removeItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return false;\r\n        }\r\n\r\n        const item = this.getItem(index);\r\n\r\n        if (isNullOrUndefined(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.destroy()) {\r\n            return false;\r\n        }\r\n\r\n        this.items.splice(item.index, 1);\r\n\r\n        this.refresh();\r\n\r\n        return true;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n\r\n    refresh() {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            const item = this.items[i];\r\n            item.setIndex(i);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            const target = getItem(event.target);\r\n\r\n            if (!hasOwn(target.dataset, 'selector')) {\r\n                return;\r\n            }\r\n\r\n            const { selectorIndex } = target.dataset;\r\n\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            const item = this.getItem(+selectorIndex);\r\n\r\n            if (isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, isNull, hasOwn } from '@std/index.js';\r\nimport { findAncestor, getElements, isHTMLElement, removeChildren } from '@dom/index.js';\r\nimport { check, uncheck, getValue, getInput } from '../utils.js';\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n/**\r\n * Gets the item element\r\n * @param {HTMLElement} element \r\n * @this {HTMLElement}\r\n */\r\nfunction getItem(element) {\r\n    const isValid = (el) => hasOwn(el.dataset, 'selector');\r\n\r\n    if (isValid(element)) {\r\n        return element;\r\n    }\r\n\r\n    return findAncestor(element, isValid, 5);\r\n}\r\n\r\nconst FormSelectorItem = {\r\n    /** @type {number} */\r\n    index: null,\r\n\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        if (this.isChecked()) {\r\n            check(this.container, Status.ON);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.input['value']; },\r\n    /** @returns {boolean} */\r\n    isChecked() { return this.input.checked; },\r\n    /**\r\n     * Set the state of the item\r\n     * @param {boolean} isChecked \r\n     * @returns {boolean} Value indicating the success of the operation\r\n     */\r\n    setChecked(isChecked) {\r\n        if (isNullOrUndefined(isChecked)) {\r\n            return false;\r\n        }\r\n\r\n        this.input.checked = isChecked;\r\n        if (isChecked) {\r\n            check(this.container, Status.ON);\r\n            this.container.classList.add(\"selector-item--selected\");\r\n        } else {\r\n            uncheck(this.container, Status.OFF);\r\n            this.container.classList.remove(\"selector-item--selected\");\r\n        }\r\n\r\n        return true;\r\n    },\r\n    setIndex(index) {\r\n        this.index = index;\r\n        this.container.dataset.selectorIndex = index;\r\n    },\r\n    destroy() {\r\n        removeChildren(this.container);\r\n        this.container.remove();\r\n\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const FormSelector = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {FormSelectorItem[]} */\r\n    items: null,\r\n    /** @type {number} */\r\n    selectedIndex: null,\r\n    /** @type {HTMLElement} */\r\n    selectedItem: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.selectedItem.value; },\r\n\r\n    init() {\r\n        const itemContainers = getElements('[data-selector]', this.container);\r\n\r\n        if (isNullOrUndefined(itemContainers)) {\r\n            return;\r\n        }\r\n\r\n        this.items = [];\r\n        this.defaultValue = getValue(this.container);\r\n        var defaultItem = null;\r\n\r\n        for (let i = 0; i < itemContainers.length; i++) {\r\n            const item = this.createItem(itemContainers[i]);\r\n\r\n            if (item.isChecked()) {\r\n                this.setSelectedItem(item);\r\n            }\r\n\r\n            if (item.value === this.defaultValue) {\r\n                defaultItem = item;\r\n            }\r\n        }\r\n\r\n        if (isNull(this.selectedItem) && !isNull(defaultItem)) {\r\n            this.setSelectedItem(defaultItem);\r\n        }\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n    createItem(container) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A selector requires a container\");\r\n        }\r\n\r\n        container.classList.add(\"selector-item\");\r\n\r\n        var input = getInput('radio', container);\r\n        if (!isHTMLElement(input)) {\r\n            throw new Error(\"Missing input: FormSelector requires an input in the container\");\r\n        }\r\n\r\n        const item = Object.create(FormSelectorItem, {\r\n            container: { value: container },\r\n            input: { value: input },\r\n            selector: { value: this },\r\n        }).init();\r\n\r\n        this.addItem(item);\r\n\r\n        return item;\r\n    },\r\n    /**\r\n     * Adds a selector item\r\n     * @param {BaseSelectorItem} item \r\n     * @param {*} _index \r\n     */\r\n    addItem(item, _index) {\r\n        this.items.push(item);\r\n\r\n        this.refresh();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * Gets a selector item\r\n     * @param {number} index \r\n     * @returns {FormSelectorItem}\r\n     */\r\n    getItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return null;\r\n        }\r\n\r\n        return this.items.find((item) => item.index === index);\r\n    },\r\n    /**\r\n     * Removes a selector item\r\n     * @param {number} index \r\n     */\r\n    removeItem(index) {\r\n        if (!Number.isInteger(index)) {\r\n            return false;\r\n        }\r\n\r\n        const item = this.getItem(index);\r\n\r\n        if (isNullOrUndefined(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (!item.destroy()) {\r\n            return false;\r\n        }\r\n\r\n        this.items.splice(item.index, 1);\r\n\r\n        this.refresh();\r\n\r\n        return true;\r\n    },\r\n    setSelectedItem(item) {\r\n        if (!this.items.includes(item)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.selectedItem) {\r\n            this.selectedItem.setChecked(false);\r\n        }\r\n\r\n        this.selectedItem = item;\r\n        this.selectedItem.setChecked(true);\r\n\r\n        return true;\r\n    },\r\n\r\n    refresh() {\r\n        for (let i = 0; i < this.items.length; i++) {\r\n            const item = this.items[i];\r\n            item.setIndex(i);\r\n        }\r\n\r\n        return this;\r\n    },\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.container.addEventListener('change', (event) => {\r\n            const target = getItem(event.target);\r\n\r\n            const { selectorIndex } = target.dataset;\r\n\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                target.checked = false;\r\n                this.items[this.selectedIndex].setChecked(true);\r\n                return;\r\n            }\r\n\r\n            const item = this.getItem(+selectorIndex);\r\n\r\n            if (isNullOrUndefined(item)) {\r\n                return;\r\n            }\r\n\r\n            this.setSelectedItem(item);\r\n\r\n            if (isFunction(this.afterChange)) {\r\n                this.afterChange(this, event);\r\n            }\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, valOrDefault } from '@std/index.js';\r\nimport { isHTMLElement } from '@dom/index.js';\r\nimport { getType, getComponents } from \"../utils.js\";\r\nimport { BaseSelector } from './base-selector.js';\r\nimport { FormSelector } from './form-selector.js';\r\n\r\n\r\nconst Name = {\r\n    BaseSelector: 'selector',\r\n    FormSelector: 'form-selector',\r\n};\r\n\r\nconst toSelector = (name) => `[data-type=\"${name}\"]`;\r\n\r\nconst Selector = {\r\n    BaseSelector: toSelector(Name.BaseSelector),\r\n    FormSelector: toSelector(Name.FormSelector),\r\n};\r\n\r\nconst Selectors = [Selector.BaseSelector, Selector.FormSelector].join(',');\r\n\r\nconst isValid = (element) => RegExp('selector|form-selector').test(getType(element));\r\n\r\nconst isSelector = (element) => isHTMLElement(element) && isValid(element);\r\n\r\nconst TypeHandler = {\r\n    'selector': (container) => Object.create(BaseSelector, {\r\n        name: { value: Name.BaseSelector },\r\n        container: { value: container },\r\n        querySelector: { value: Selector.BaseSelector },\r\n    }),\r\n    'form-selector': (container) => Object.create(FormSelector, {\r\n        name: { value: Name.FormSelector },\r\n        container: { value: container },\r\n        querySelector: { value: Selector.FormSelector },\r\n    }),\r\n};\r\n\r\nexport const SelectorManager = {\r\n    /**\r\n     * Creates a `selector`\r\n     * @param {HTMLElement} container \r\n     * @param {string} [_type] \r\n     * @returns {BaseSelector|FormSelector}\r\n     */\r\n    create(container, _type) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A selector requires a container\");\r\n        }\r\n\r\n        const type = valOrDefault(_type, getType(container));\r\n        const handler = TypeHandler[type];\r\n\r\n        if (!isFunction(handler)) {\r\n            throw new Error(`Missing handler: The '${type}' field could not be handled`);\r\n        }\r\n\r\n        const widget = handler(container);\r\n\r\n        return widget;\r\n    },\r\n    /**\r\n     * Activates the `selector` found in the container\r\n     * @param {HTMLElement} container \r\n     * @param {*} [_options] \r\n     * @returns {BaseSelector[]|FormSelector[]}\r\n     */\r\n    activate(container, _options) {\r\n        const components = isSelector(container) ? [container] : getComponents(Selectors, container);\r\n        const options = valOrDefault(_options, {});\r\n\r\n        if (isNullOrUndefined(components)) {\r\n            return null;\r\n        }\r\n\r\n        const selectors = [];\r\n\r\n        for (let i = 0; i < components.length; i++) {\r\n            let selector = this.create(components[i]);\r\n\r\n            selector.init(options);\r\n\r\n            selectors.push(selector);\r\n        }\r\n\r\n        return selectors;\r\n    }\r\n};","import { isFunction, isNullOrUndefined } from '@std/index.js';\r\nimport { check, uncheck, getState, getValue } from \"../utils.js\";\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n\r\n/**\r\n * Changes the state of the switch\r\n * @param {boolean} isChecked \r\n * @returns {boolean} A value indicating whether the operation was a success\r\n */\r\nfunction setChecked(isChecked) {\r\n    if (isNullOrUndefined(isChecked)) {\r\n        return false;\r\n    }\r\n\r\n    if (isChecked) {\r\n        check(this.container, Status.ON);\r\n    } else {\r\n        uncheck(this.container, Status.OFF);\r\n    }\r\n\r\n    if (isFunction(this.afterChange)) {\r\n        this.afterChange(this);\r\n    }\r\n\r\n    this.refresh();\r\n\r\n    return true;\r\n}\r\n\r\nexport const BaseSwitch = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return getValue(this.container); },\r\n\r\n    init(args = {}) {\r\n        Object.assign(this, args);\r\n\r\n        this.container.classList.add(\"zenui-switch\");\r\n\r\n        this.defaultValue = this.isChecked();\r\n\r\n        setChecked.call(this, this.isChecked());\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return getState(this.container) === Status.ON;\r\n    },\r\n\r\n    check() {\r\n        setChecked.call(this, true);\r\n\r\n        return this;\r\n    },\r\n    uncheck() {\r\n        setChecked.call(this, false);\r\n\r\n        return this;\r\n    },\r\n    toggle() {\r\n        setChecked.call(this, !this.isChecked());\r\n\r\n        return this;\r\n    },\r\n\r\n    reset() {\r\n        setChecked.call(this, this.defaultValue);\r\n\r\n        return this;\r\n    },\r\n    refresh() {\r\n        if (this.isChecked()) {\r\n            this.container.classList.add(\"zenui-switch--checked\");\r\n        } else {\r\n            this.container.classList.remove(\"zenui-switch--checked\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * @returns {HTMLElement}\r\n     */\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.container.addEventListener('click', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                return;\r\n            }\r\n\r\n            this.toggle();\r\n        });\r\n    }\r\n};","import { isFunction, isNullOrUndefined, valOrDefault } from '@std/index.js';\r\nimport { check, uncheck, getState } from \"../utils.js\";\r\n\r\n\r\nconst Status = {\r\n    ON: 'on',\r\n    OFF: 'off'\r\n};\r\n\r\n\r\n/**\r\n * Changes the state of the switch\r\n * @param {boolean} isChecked \r\n * @returns {boolean} A value indicating whether the operation was a success\r\n */\r\nfunction setChecked(isChecked) {\r\n    if (isNullOrUndefined(isChecked)) {\r\n        return false;\r\n    }\r\n\r\n    this.input.checked = isChecked;\r\n\r\n    if (isChecked) {\r\n        check(this.container, Status.ON);\r\n    } else {\r\n        uncheck(this.container, Status.OFF);\r\n    }\r\n\r\n    if (isFunction(this.afterChange)) {\r\n        this.afterChange(this);\r\n    }\r\n\r\n    this.refresh();\r\n\r\n    return true;\r\n}\r\n\r\n\r\nexport const FormSwitch = {\r\n    /** @type {string} */\r\n    defaultValue: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n\r\n    /** @returns {string} */\r\n    get value() { return this.input.value; },\r\n\r\n    init(args = {}) {\r\n        Object.assign(this, args);\r\n\r\n        this.container.classList.add(\"zenui-switch\");\r\n        this.input.classList.add(\"zenui-switch-input\");\r\n\r\n        this.defaultValue = this.isChecked();\r\n\r\n        setChecked.call(this, this.isChecked());\r\n\r\n        this.bindEvents();\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Verifies that the switch is checked\r\n     * @returns {boolean} A value indicating whether the switch is checked\r\n     */\r\n    isChecked() {\r\n        return this.input.checked;\r\n    },\r\n\r\n    check() {\r\n        setChecked.call(this, true);\r\n\r\n        return this;\r\n    },\r\n    uncheck() {\r\n        setChecked.call(this, false);\r\n\r\n        return this;\r\n    },\r\n    toggle() {\r\n        setChecked.call(this, !this.isChecked());\r\n\r\n        return this;\r\n    },\r\n\r\n    reset() {\r\n        setChecked.call(this, this.defaultValue);\r\n\r\n        return this;\r\n    },\r\n    refresh() {\r\n        if (this.isChecked()) {\r\n            this.container.classList.add(\"zenui-switch--checked\");\r\n        } else {\r\n            this.container.classList.remove(\"zenui-switch--checked\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * @returns {HTMLElement}\r\n     */\r\n    render() {\r\n        return this.container;\r\n    },\r\n\r\n    bindEvents() {\r\n        this.input.addEventListener('change', (event) => {\r\n            var halt = false;\r\n\r\n            if (isFunction(this.beforeChange)) {\r\n                halt = this.beforeChange(this, event) === false;\r\n            }\r\n\r\n            if (halt) {\r\n                this.input.checked = !this.input.checked;   // revert input checked state\r\n                return;\r\n            }\r\n\r\n            setChecked.call(this, this.isChecked());\r\n        });\r\n    }\r\n};\r\n","import { isFunction, isNullOrUndefined, valOrDefault } from '@std/index.js';\r\nimport { isHTMLElement } from '@dom/index.js';\r\nimport { getType, getComponents, getInput } from \"../utils.js\";\r\nimport { BaseSwitch } from './base-switch.js';\r\nimport { FormSwitch } from './form-switch.js';\r\n\r\n\r\nconst Name = {\r\n    BaseSwitch: 'switch',\r\n    FormSwitch: 'form-switch',\r\n};\r\n\r\nconst toSelector = (name) => `[data-type=\"${name}\"]`;\r\n\r\nconst Selector = {\r\n    BaseSwitch: toSelector(Name.BaseSwitch),\r\n    FormSwitch: toSelector(Name.FormSwitch),\r\n};\r\n\r\nconst Selectors = [Selector.BaseSwitch, Selector.FormSwitch].join(',');\r\n\r\nconst isValid = (element) => RegExp('switch|form-switch').test(getType(element));\r\n\r\nconst isSwitch = (element) => isHTMLElement(element) && isValid(element);\r\n\r\n\r\nconst TypeHandler = {\r\n    'switch': (container) => Object.create(BaseSwitch, {\r\n        name: { value: Name.BaseSwitch },\r\n        container: { value: container },\r\n        querySelector: { value: Selector.BaseSwitch },\r\n    }),\r\n    'form-switch': (container) => {\r\n        const input = getInput('checkbox', container);\r\n\r\n        if (!isHTMLElement(input)) {\r\n            throw new Error(\"Missing input: FormSwitch requires an input in the container\");\r\n        }\r\n\r\n        return Object.create(FormSwitch, {\r\n            name: { value: Name.FormSwitch },\r\n            container: { value: container },\r\n            input: { value: input },\r\n            querySelector: { value: Selector.FormSwitch },\r\n        });\r\n    }\r\n};\r\n\r\nexport const SwitchManager = {\r\n    /**\r\n     * Creates a `switch`\r\n     * @param {HTMLElement} container \r\n     * @param {string} [_type] \r\n     * @returns {BaseSwitch|FormSwitch}\r\n     */\r\n    create(container, _type) {\r\n        if (!isHTMLElement(container)) {\r\n            throw new TypeError(\"Missing container: A switch requires a container\");\r\n        }\r\n\r\n        const type = valOrDefault(_type, getType(container));\r\n        const handler = TypeHandler[type];\r\n\r\n        if (!isFunction(handler)) {\r\n            throw new Error(`Missing handler: The '${type}' field could not be handled`);\r\n        }\r\n\r\n        const widget = handler(container);\r\n\r\n        return widget;\r\n    },\r\n    \r\n    /**\r\n     * Activates the `switch` found in the container\r\n     * @param {HTMLElement} container \r\n     * @param {*} [_options] \r\n     * @returns {BaseSelector[]|FormSelector[]}\r\n     */\r\n    activate(container, _options) {\r\n        const components = isSwitch(container) ? [container] : getComponents(Selectors, container);\r\n        const options = valOrDefault(_options, {});\r\n    \r\n        if (isNullOrUndefined(components)) {\r\n            return null;\r\n        }\r\n    \r\n        const switches = [];\r\n    \r\n        for (let i = 0; i < components.length; i++) {\r\n            let switchWidget = this.create(components[i]);\r\n    \r\n            switchWidget.init(options);\r\n    \r\n            switches.push(switchWidget);\r\n        }\r\n    \r\n        return switches;\r\n    }\r\n};","import { isHTMLElement } from \"@dom/index.js\";\r\n\r\n/**\r\n * Shows an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function show(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument. The given `element` is not a valid HTMLElement\");\r\n    }\r\n\r\n    element.style.display = \"block\";\r\n}\r\n\r\n/**\r\n * Hides an element\r\n * @param {HTMLElement} element\r\n */\r\nexport function hide(element) {\r\n    if (!isHTMLElement(element)) {\r\n        throw new TypeError(\"Bad argument. The given `element` is not a valid HTMLElement\");\r\n    }\r\n\r\n    element.style.display = \"none\";\r\n}","import { getElement, getElements, isHTMLElement, findAncestor } from '@dom/index.js';\r\nimport { isNullOrUndefined, isFunction, valOrDefault, hasOwn } from '@std/index.js';\r\nimport { show, hide } from './utils.js';\r\nimport { getComponents } from './form/utils.js';\r\n\r\nconst ATTRIBUTE = 'collapsible';\r\n\r\nconst ErrorCode = {\r\n    BAD_CONTAINER_COLLAPSIBLE: 'BAD_CONTAINER_COLLAPSIBLE',\r\n    BAD_CONTAINER_ACCORDION: 'BAD_CONTAINER_ACCORDION',\r\n};\r\nconst ErrorHandler = {\r\n    BAD_CONTAINER_COLLAPSIBLE: new Error(\"Missing container: A collapsible requires a container\"),\r\n    BAD_CONTAINER_ACCORDION: new Error(\"Missing container: An accordion requires a container\"),\r\n};\r\n\r\nconst State = {\r\n    OPEN: 'expanded',\r\n    CLOSED: 'collapsed'\r\n};\r\n\r\nconst isCollapsible = (el) => ATTRIBUTE in el.dataset;\r\n\r\nconst isAccordion = (el) => el.dataset['boost'] === 'accordion';\r\n\r\nconst CollapsibleFactory = {\r\n    /** @returns {CollapsibleFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_COLLAPSIBLE;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    name: 'collapsible',\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {HTMLElement} */\r\n    header: null,\r\n    /** @type {HTMLElement} */\r\n    content: null,\r\n    /** @type {Function} */\r\n    beforeOpen: null,\r\n    /** @type {Function} */\r\n    afterOpen: null,\r\n    /** @type {Function} */\r\n    beforeClose: null,\r\n    /** @type {Function} */\r\n    afterClose: null,\r\n    getState() { return this.container.dataset[this.name]; },\r\n    setState(val) { this.container.dataset[this.name] = val; },\r\n    /** Verifies that the container is collapsed (closed) */\r\n    isCollapsed() { return this.getState() === State.CLOSED; },\r\n    /** Verifies that the container is expanded (open) */\r\n    isExpanded() { return this.getState() === State.OPEN; },\r\n    isClosed: false,\r\n    isInitialized: false,\r\n    /** Opens the container and calls the defined pre/post operations */\r\n    open() {\r\n        if (this.isInitialized && !this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeOpen)) {\r\n            halt = this.beforeOpen(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(show, State.OPEN, 'add');\r\n\r\n        if (isFunction(this.afterOpen)) {\r\n            this.afterOpen(this);\r\n        }\r\n\r\n        this.isClosed = false;\r\n\r\n        return this;\r\n    },\r\n    /** Closes the container and calls the defined pre/post operations */\r\n    close() {\r\n        if (this.isInitialized && this.isClosed) {\r\n            return this;\r\n        }\r\n\r\n        var halt = false;\r\n\r\n        if (isFunction(this.beforeClose)) {\r\n            halt = this.beforeClose(this) === false;\r\n        }\r\n\r\n        if (halt) {\r\n            return this;\r\n        }\r\n\r\n        this.toggle(hide, State.CLOSED, 'remove');\r\n\r\n        if (isFunction(this.afterClose)) {\r\n            this.afterClose(this);\r\n        }\r\n\r\n        this.isClosed = true;\r\n\r\n        return this;\r\n    },\r\n    toggle(displayCb, state, action) {\r\n        displayCb(this.content);\r\n        this.setState(state);\r\n        this.container.classList[action]('expanded');\r\n    },\r\n    init(args) {\r\n        Object.assign(this, args);\r\n\r\n        this.header = getElement(`[data-${this.name}-header]`, this.container);\r\n        this.content = getElement(`[data-${this.name}-content]`, this.container);\r\n\r\n        if (this.isCollapsed()) {\r\n            this.close();\r\n        } else if (this.isExpanded()) {\r\n            this.isClosed = true;\r\n            this.open();\r\n        }\r\n        this.bindEvents();\r\n\r\n        this.isInitialized = true;\r\n        return this;\r\n    },\r\n    bindEvents() {\r\n        const container = this.container;\r\n        const header = this.header;\r\n\r\n        header.addEventListener('click', (e) => {\r\n            var target = e.target;\r\n            var targetCollapsible = findAncestor(target, (el) => this.name in el.dataset);\r\n            if (container === targetCollapsible) {\r\n                if (this.isCollapsed()) {\r\n                    this.open();\r\n                } else if (header.parentNode === container) {\r\n                    this.close();\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nconst AccordionFactory = {\r\n    /** @returns {AccordionFactory} */\r\n    create(container, options) {\r\n        if (!isHTMLElement(container)) {\r\n            return ErrorCode.BAD_CONTAINER_ACCORDION;\r\n        }\r\n\r\n        var instance = Object.create(this);\r\n\r\n        Object.assign(instance, options, {\r\n            container: container\r\n        });\r\n\r\n        return instance;\r\n    },\r\n    /** @type {HTMLElement} */\r\n    container: null,\r\n    /** @type {CollapsibleFactory[]} */\r\n    sections: null,\r\n    /** @type {CollapsibleFactory} */\r\n    selectedSection: null,\r\n    /** @type {Function} */\r\n    beforeChange: null,\r\n    /** @type {Function} */\r\n    afterChange: null,\r\n    init() {\r\n        this.sections = [];\r\n\r\n        var accordionElements = getElements('[data-accordion]', this.container);\r\n\r\n        for (let i = 0; i < accordionElements.length; i++) {\r\n            let element = accordionElements[i];\r\n            let collapsible = CollapsibleFactory.create(element, {\r\n                name: 'accordion',\r\n                index: i,\r\n                afterOpen: (selected) => {\r\n                    if (isFunction(this.beforeChange)) {\r\n                        this.beforeChange(selected);\r\n                    }\r\n\r\n                    this.sections.filter((section) => section.index !== selected.index)\r\n                        .forEach((other) => other.close());\r\n\r\n                    if (isFunction(this.afterChange)) {\r\n                        this.afterChange(selected);\r\n                    }\r\n\r\n                    this.selectedSection = selected;\r\n                }\r\n            });\r\n            if (hasOwn(ErrorCode, collapsible)) {\r\n                return collapsible;\r\n            }\r\n            this.sections.push(collapsible);\r\n            collapsible.init();\r\n        }\r\n\r\n        return this;\r\n    }\r\n};\r\n\r\n/**\r\n * Makes a container collapsible\r\n * @param {!HTMLElement} container \r\n * @param {Object} [options]\r\n */\r\nexport function Collapsible(container, _options) {\r\n    var collapsibleElements = isCollapsible(container) ? [container] : getComponents('[data-collapsible]', container);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(collapsibleElements)) {\r\n        return null;\r\n    }\r\n\r\n    var collapsibles = [];\r\n\r\n    for (let i = 0; i < collapsibleElements.length; i++) {\r\n        let collapsible = CollapsibleFactory.create(collapsibleElements[i], options);\r\n        if (hasOwn(ErrorHandler, collapsible)) {\r\n            throw ErrorHandler[collapsible];\r\n        }\r\n        collapsible.init();\r\n\r\n        collapsibles.push(collapsible);\r\n    }\r\n\r\n    return collapsibles;\r\n}\r\n\r\n/**\r\n * Transforms a container into an accordion\r\n * @param {!HTMLElement} container \r\n * @param {Object} [_options]\r\n */\r\nexport function Accordion(container, _options) {\r\n    var accordionElements = isAccordion(container) ? [container] : getComponents('[data-boost=accordion]', container);\r\n    var options = valOrDefault(_options, {});\r\n\r\n    if (isNullOrUndefined(accordionElements)) {\r\n        return null;\r\n    }\r\n\r\n    var accordions = [];\r\n\r\n    for (let i = 0; i < accordionElements.length; i++) {\r\n        let accordion = AccordionFactory.create(accordionElements[i], options);\r\n        if (hasOwn(ErrorHandler, accordion)) {\r\n            throw ErrorHandler[accordion];\r\n        }\r\n        accordion.init();\r\n        accordions.push(accordion);\r\n    }\r\n\r\n    return accordions;\r\n}\r\n","/**\r\n * @namespace URI\r\n */\r\n\r\nimport { isNullOrWhitespace, valOrDefault } from '@std/index.js';\r\n\r\nconst encode = encodeURIComponent;\r\n\r\n/**\r\n * Extracts and returns the protocol and host of a given url\r\n * @param {string} url \r\n * @memberof URI\r\n */\r\nexport function getRootUrl(url) {\r\n    return url.toString().replace(/^(.*\\/\\/[^/?#]*).*$/, \"$1\");\r\n}\r\n\r\n/**\r\n * Extracts and returns the parameters of a URL\r\n * @param {string} [prop] Searched parameter\r\n * @param {string} [defValue] Searched parameter default value\r\n * @memberof URI\r\n */\r\nexport function getUrlParams(prop, defValue) {\r\n    var search = decodeURIComponent(window.location.search);\r\n\r\n    if (isNullOrWhitespace(search)) {\r\n        return null;\r\n    }\r\n\r\n    var params = {};\r\n    if ('URLSearchParams' in window) {\r\n        let searchParams = new URLSearchParams(search.substring(1));\r\n        for (const pair of searchParams.entries()) {\r\n            params[pair[0]] = pair[1];\r\n        }\r\n        if (prop) {\r\n            return searchParams.get(prop);\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    var defs = search.substring(1).split('&');\r\n    defs.forEach((val) => {\r\n        var parts = val.split('=', 2);\r\n        params[parts[0]] = parts[1];\r\n    });\r\n    \r\n    if (prop) {\r\n        return valOrDefault(params[prop], defValue);\r\n    }\r\n\r\n    return params;\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction getParams(href) {\r\n    return href.slice(href.indexOf('?') + 1);\r\n}\r\n\r\n/**\r\n * Creates a query string\r\n * @param {Object} query \r\n * @returns {string} Query string\r\n * @memberof URI\r\n */\r\nexport function queryBuilder(query, ignoreNullOrEmpty = false) {\r\n    var str = [];\r\n\r\n    Object.keys(query).forEach((prop) => {\r\n        if (!ignoreNullOrEmpty || !isNullOrWhitespace(query[prop])) {\r\n            str.push(`${encode(prop)}=${encode(query[prop])}`);\r\n        }\r\n    });\r\n\r\n    return str.join('&');\r\n}","import { valOrDefault, isString } from \"./std-parse.js\";\r\n\r\n\r\n/**\r\n * Converts the received boolean value to an integer\r\n * @param {boolean} value \r\n * @returns {number} 1 or 0\r\n * @memberof STD\r\n */\r\nexport function boolToInt(value) { return value ? 1 : 0; }\r\n\r\n/**\r\n * Converts the received value to a boolean\r\n * @param {*} value\r\n * @returns {boolean} A boolean equivalent of the received value\r\n * @memberof STD\r\n */\r\nexport function toBoolean(value) {\r\n    var val = valOrDefault(value, false);\r\n\r\n    return isString(val) && val.toLowerCase() === \"true\" || Number.isInteger(val) && val === 1 || val === true;\r\n}\r\n","import { isNullOrUndefined } from '@std/index.js';\r\nimport { createTextArea } from './dom-create.js';\r\nimport { isHTMLElement } from './dom-parse.js';\r\n\r\n/**\r\n * Copies selected content to clipboard\r\n * @param {HTMLElement|string} value\r\n * @returns {boolean} Value indicating whether the content has been succesfully copied to the clipboard\r\n * @memberof DOM\r\n */\r\nexport function copytoClipboard(value) {\r\n    if (isNullOrUndefined(value)) {\r\n        return false;\r\n    }\r\n\r\n    var element = createTextArea({\r\n        value: isHTMLElement(value) ? value.textContent : value.toString(),\r\n        readonly: true\r\n    });\r\n\r\n    if(!isHTMLElement(element)) {\r\n        return false;\r\n    }\r\n\r\n    document.body.appendChild(element);\r\n    element.select();\r\n    document.execCommand('copy');\r\n    element.remove();\r\n\r\n    return true;\r\n}","/**\r\n * Creates a fetch request with a time limit to resolve the request\r\n * @param {URI} uri \r\n * @param {*} options \r\n * @param {number} time \r\n * @memberof STD\r\n */\r\nexport function fetchWithTimeout(uri, options = {}, time = 5000) {\r\n    // Lets set up our `AbortController`, and create a request options object\r\n    // that includes the controller's `signal` to pass to `fetch`.\r\n    const controller = new AbortController()\r\n    const config = { ...options, signal: controller.signal }\r\n\r\n    // Set a timeout limit for the request using `setTimeout`. If the body of this\r\n    // timeout is reached before the request is completed, it will be cancelled.\r\n    const timeout = setTimeout(() => {\r\n        controller.abort()\r\n    }, time)\r\n\r\n    return fetch(uri, config)\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error(`${response.status}: ${response.statusText}`)\r\n            }\r\n\r\n            return response\r\n        })\r\n        .catch(error => {\r\n            // When we abort our `fetch`, the controller conveniently throws a named\r\n            // error, allowing us to handle them separately from other errors.\r\n            if (error.name === 'AbortError') {\r\n                throw new Error('Response timed out')\r\n            }\r\n\r\n            throw new Error(error.message)\r\n        })\r\n}","import { isEmpty } from \"./std-parse.js\";\r\n\r\n\r\n/**\r\n * Inserts an item in an array at the specified index\r\n * @param {*[]} array array\r\n * @param {number} index \r\n * @param {object} item \r\n * @returns {number} The new length of the array\r\n * @memberof STD\r\n */\r\nexport function insert(array, index, item) {\r\n    if (!(Array.isArray(array) && Number.isInteger(index))) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    array.splice(index, 0, item);\r\n\r\n    return array.length;\r\n}\r\n\r\n/**\r\n * Returns the last element of an array.\r\n * @param {*[]} array array\r\n * @memberof STD\r\n */\r\nexport function last(array) {\r\n    if (!Array.isArray(array)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    if (isEmpty(array)) {\r\n        return undefined;\r\n    }\r\n\r\n    return array[array.length - 1];\r\n}\r\n\r\n/**\r\n * Returns the first element of an array.\r\n * @param {*[]} array array\r\n * @memberof STD\r\n */\r\nexport function first(array) {\r\n    if (!Array.isArray(array)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    return array[0];\r\n}","import { getElement, getElements, isHTMLElement } from '@dom/index.js';\r\n\r\n\r\n/**\r\n * Add a counter to an input element\r\n * @param {HTMLElement} container \r\n */\r\nexport function inputCounter(container) {\r\n    const counters = getElements('[data-counter]', container);\r\n\r\n    for (let i = 0; i < counters.length; i++) {\r\n        let counter = counters[i];\r\n        let ref = counter.dataset['counter'];\r\n        let input = getElement(`#${ref}`);\r\n        if (isHTMLElement(input)) {\r\n            counter.dataset['counterMax'] = input.maxLength;\r\n            counter.dataset['counterVal'] = input.value.length;\r\n            bindEvents(input, counter);\r\n        } else {\r\n            console.error(`%c@zenkai%c #InputCounter>%cinputCounter:%c Failed to add counter ${ref}. Input (referenced) was not found.`, \"text-decoration: underline\", \"\", \"font-weight: bold;\",\"font-weight: normal;\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Bind DOM events\r\n     * @param {HTMLInputElement} input \r\n     * @param {HTMLElement} counter \r\n     */\r\n    function bindEvents(input, counter) {\r\n        input.addEventListener('input', function (e) {\r\n            counter.dataset['counterVal'] = input.value.length;\r\n        });\r\n    }\r\n\r\n    return counters;\r\n}","/**\r\n * Return a random integer between min and max (inclusive).\r\n * @param {number} min \r\n * @param {number} [max] \r\n * @param {boolean} [secure] \r\n * @memberof STD\r\n*/\r\nexport function random(min, max, secure = false) {\r\n    if (!Number.isInteger(min)) {\r\n        throw new TypeError(\"Bad argument\");\r\n    }\r\n\r\n    if (!Number.isInteger(max)) {\r\n        max = min;\r\n        min = 0;\r\n    }\r\n\r\n    if (max < min) {\r\n        throw new Error(\"Bad argument: max must be greater than min\");\r\n    }\r\n\r\n    return min + Math.floor((secure ? secureMathRandom() : Math.random()) * (max - min + 1));\r\n}\r\n\r\n/**\r\n * More secure implementation of `Math.random`\r\n * @private\r\n */\r\nfunction secureMathRandom() {\r\n    // Divide a random UInt32 by the maximum value (2^32 -1) to get a result between 0 and 1\r\n    return window.crypto.getRandomValues(new Uint32Array(1))[0] / 4294967295;\r\n}"],"names":["valOrDefault","arg","value","isUndefined","isNullOrUndefined","isEmpty","obj","isIterable","length","isDate","Date","_typeof","Object","prototype","toString","call","isString","String","isFunction","isObject","Symbol","iterator","isCollection","isNull","isNullOrWhitespace","test","resolveDate","useOffset","date","time","getTime","Number","isNaN","getTimezoneOffset","formatDate","format","twoDigits","val","dd","getDate","mm","getMonth","yyyy","getFullYear","hh","getHours","MM","getMinutes","ss","getSeconds","replace","slice","hasOwnProperty","isPrototypeOf","hasOwn","key","cloneObject","temp","constructor","capitalize","str","toLowerCase","s","toUpperCase","CaseHandler","camelCase","pascalCase","ccString","charAt","trim","all","values","pred","Array","isArray","TypeError","i","getHitCount","counter","findByIndex","match","prop","index","windowWidth","window","innerWidth","document","documentElement","clientWidth","body","windowHeight","innerHeight","clientHeight","isElementNode","nodeType","Node","ELEMENT_NODE","isNode","isElement","Element","isHTMLElement","kind","HTMLElement","element","some","name","type","tag","interfaceName","TagNameMapping","tagName","includes","isDocumentFragment","DOCUMENT_FRAGMENT_NODE","DocumentFragment","_htmlToElement","html","template","createElement","innerHTML","content","htmlToElement","bind","htmlToElements","formatClass","assign","assignAttribute","setAttribute","GLOBAL_ATTRIBUTES","AttributeHandler","accesskey","autocapitalize","addClass","classList","add","formattedValue","className","split","dataset","draggable","editable","hidden","id","inputmode","lang","style","tabindex","text","title","download","ping","target","coords","shape","autoplay","buffered","controls","loop","muted","playsinline","poster","preload","accept","action","autocomplete","autofocus","capture","checked","cols","disabled","dirname","enctype","form","formaction","formenctype","formmethod","formnovalidate","formtarget","high","label","list","low","max","maxlength","method","min","minlength","multiple","novalidate","optimum","pattern","placeholder","readonly","required","rows","selected","size","spellcheck","step","wrap","crossorigin","decoding","height","ismap","loading","srcset","width","alt","as","media","rel","src","sizes","reversed","start","charset","data","cite","abbr","colspan","span","rowspan","scope","srclang","href","hreflang","datetime","usemap","addAttributes","attribute","validAttributes","keys","args","fn","shift","createEmptyElement","_validAttributes","_attributes","_content","addContent","createBase","createLink","createMeta","createTitle","createTemplate","createHeader","createFooter","createMain","createArticle","createSection","createNav","createAside","createH1","createH2","createH3","createH4","createH5","createH6","createDiv","createLineBreak","createThematicBreak","createParagraph","createBlockQuotation","createUnorderedList","createOrderedList","createListItem","createDescriptionList","createDescriptionTerm","createDescriptionDetails","createAnchor","createArea","createAudio","createImage","createEmbed","createFigure","createFigureCaption","createObject","createPicture","createSource","createTrack","createVideo","createSpan","createStrong","createEmphasis","createMark","createSample","createSubscript","createSuperscript","createDeletedPart","createInsertedPart","createQuote","createAbbreviation","createB","createI","createS","createU","createCite","createTime","createCode","createForm","createInput","createTextArea","createLabel","createSelect","createOption","createOptionGroup","createFieldset","createLegend","createDataList","createMeter","createProgress","createOutput","createButton","createTable","createCaption","createTableHeader","createTableBody","createTableFooter","createTableColumn","createTableColumnGroup","createTableRow","createTableHeaderCell","createTableCell","append","isClassSelector","selector","isIdSelector","getElement","_container","container","querySelector","getElementById","substring","getElementsByClassName","getElements","querySelectorAll","getElementSibling","dir","sibling","getPreviousElementSibling","getNextElementSibling","findAncestor","_max","parent","parentElement","findAncestorIter","findAncestorInf","removeChildren","node","_callback","from","childNodes","forEach","n","removeChild","hasChildNodes","lastChild","removeAllChildren","moveDown","moveUp","remove","getType","getValue","getState","setState","check","uncheck","getComponents","getInput","htmlFor","Status","getItem","isValid","el","BaseSelectorItem","init","this","setChecked","isChecked","setIndex","selectorIndex","destroy","BaseSelector","defaultValue","items","selectedIndex","selectedItem","beforeChange","afterChange","itemContainers","defaultItem","item","createItem","setSelectedItem","bindEvents","create","addItem","push","refresh","isInteger","find","removeItem","splice","render","addEventListener","event","halt","_this","toSelector","isSelector","RegExp","FormSelectorItem","input","FormSelector","Error","Name","Selector","Selectors","join","TypeHandler","SelectorManager","_type","handler","activate","_options","components","options","selectors","BaseSwitch","toggle","reset","isSwitch","FormSwitch","SwitchManager","switches","switchWidget","show","display","hide","ErrorCode","BAD_CONTAINER_COLLAPSIBLE","BAD_CONTAINER_ACCORDION","ErrorHandler","State","CollapsibleFactory","instance","header","beforeOpen","afterOpen","beforeClose","afterClose","isCollapsed","isExpanded","isClosed","isInitialized","open","close","displayCb","state","e","targetCollapsible","parentNode","AccordionFactory","sections","selectedSection","accordionElements","collapsible","_this2","filter","section","other","encode","encodeURIComponent","accordions","accordion","collapsibleElements","collapsibles","path","separator","hitCount","select","optValue","eqHandler","option","selectedOptions","opt","deep","importNode","t1","t2","arr1","arr2","textContent","appendChild","execCommand","_children","fragment","createDocumentFragment","createTextNode","uri","controller","AbortController","config","signal","setTimeout","abort","fetch","then","response","ok","status","statusText","error","message","part","regex","callback","REGEX_BRACKET_DIGIT","me","parts","len","indexOf","array","labels","console","warn","activeElement","casing","lastIndexOf","url","defValue","search","decodeURIComponent","location","params","searchParams","URLSearchParams","entries","pair","get","counters","ref","maxLength","char","child","getPrototypeOf","HTMLCollection","getBoundingClientRect","top1","top","right1","right","bottom1","bottom","left1","left","top2","right2","bottom2","left2","inner","outer","charCode","charCodeAt","NodeList","query","ignoreNullOrEmpty","secure","Math","floor","crypto","getRandomValues","Uint32Array","random","normalize","_date"],"mappings":"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"}